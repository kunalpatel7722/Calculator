{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/shared/CurrencyToggle.tsx"],"sourcesContent":["\n'use client';\n\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\nexport interface Currency {\n  value: string;\n  label: string;\n  symbol: string;\n}\n\nexport const AVAILABLE_CURRENCIES: Currency[] = [\n  { value: 'USD', label: 'USD ($)', symbol: '$' },\n  { value: 'EUR', label: 'EUR (€)', symbol: '€' },\n  { value: 'GBP', label: 'GBP (£)', symbol: '£' },\n  { value: 'INR', label: 'INR (₹)', symbol: '₹' },\n  { value: 'JPY', label: 'JPY (¥)', symbol: '¥' },\n  { value: 'AUD', label: 'AUD (A$)', symbol: 'A$' },\n  { value: 'CAD', label: 'CAD (C$)', symbol: 'C$' },\n  { value: 'CHF', label: 'CHF (Fr)', symbol: 'CHF' },\n  { value: 'CNY', label: 'CNY (元)', symbol: '元' },\n];\n\ninterface CurrencyToggleProps {\n  selectedCurrency: Currency;\n  onCurrencyChange: (currency: Currency) => void;\n  id?: string;\n  className?: string;\n}\n\nexport function CurrencyToggle({ selectedCurrency, onCurrencyChange, id, className }: CurrencyToggleProps) {\n  const handleValueChange = (valueString: string) => {\n    const newCurrency = AVAILABLE_CURRENCIES.find(c => c.value === valueString);\n    if (newCurrency) {\n      onCurrencyChange(newCurrency);\n    }\n  };\n\n  return (\n    <Select onValueChange={handleValueChange} value={selectedCurrency.value}>\n      <SelectTrigger id={id} className={className}>\n        <SelectValue placeholder=\"Select currency\" />\n      </SelectTrigger>\n      <SelectContent>\n        {AVAILABLE_CURRENCIES.map((c) => (\n          <SelectItem key={c.value} value={c.value}>\n            {c.label}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAFA;;;AAUO,MAAM,uBAAmC;IAC9C;QAAE,OAAO;QAAO,OAAO;QAAW,QAAQ;IAAI;IAC9C;QAAE,OAAO;QAAO,OAAO;QAAW,QAAQ;IAAI;IAC9C;QAAE,OAAO;QAAO,OAAO;QAAW,QAAQ;IAAI;IAC9C;QAAE,OAAO;QAAO,OAAO;QAAW,QAAQ;IAAI;IAC9C;QAAE,OAAO;QAAO,OAAO;QAAW,QAAQ;IAAI;IAC9C;QAAE,OAAO;QAAO,OAAO;QAAY,QAAQ;IAAK;IAChD;QAAE,OAAO;QAAO,OAAO;QAAY,QAAQ;IAAK;IAChD;QAAE,OAAO;QAAO,OAAO;QAAY,QAAQ;IAAM;IACjD;QAAE,OAAO;QAAO,OAAO;QAAW,QAAQ;IAAI;CAC/C;AASM,SAAS,eAAe,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,EAAE,EAAE,SAAS,EAAuB;IACvG,MAAM,oBAAoB,CAAC;QACzB,MAAM,cAAc,qBAAqB,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK;QAC/D,IAAI,aAAa;YACf,iBAAiB;QACnB;IACF;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,eAAe;QAAmB,OAAO,iBAAiB,KAAK;;0BACrE,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,IAAI;gBAAI,WAAW;0BAChC,cAAA,8OAAC,kIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,8OAAC,kIAAA,CAAA,gBAAa;0BACX,qBAAqB,GAAG,CAAC,CAAC,kBACzB,8OAAC,kIAAA,CAAA,aAAU;wBAAe,OAAO,EAAE,KAAK;kCACrC,EAAE,KAAK;uBADO,EAAE,KAAK;;;;;;;;;;;;;;;;AAOlC","debugId":null}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/CompoundInterestCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  principal: z.coerce.number().min(0.01, \"Principal must be greater than 0\"),\n  rate: z.coerce.number().min(0.01, \"Interest rate must be greater than 0\").max(100, \"Interest rate must be 100 or less\"),\n  time: z.coerce.number().min(1, \"Time must be at least 1 year\").max(100, \"Time cannot exceed 100 years\"),\n  compoundingFrequency: z.enum(['1', '2', '4', '12']), // Annually, Semi-Annually, Quarterly, Monthly\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  futureValue: number;\n  totalInterest: number;\n  annualBreakdown: { year: number; value: number; interestEarned: number }[];\n}\n\nexport function CompoundInterestCalculator() {\n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      principal: 10000,\n      rate: 7,\n      time: 10,\n      compoundingFrequency: '12',\n    },\n  });\n\n  const calculateCompoundInterest = (data: FormData) => {\n    const { principal, rate, time, compoundingFrequency } = data;\n    const n = parseInt(compoundingFrequency);\n    const r = rate / 100;\n\n    const futureValue = principal * Math.pow((1 + r / n), n * time);\n    const totalInterest = futureValue - principal;\n\n    const annualBreakdown: CalculationResult['annualBreakdown'] = [];\n    let currentPrincipal = principal;\n    for (let year = 1; year <= time; year++) {\n      const valueAtYearEnd = currentPrincipal * Math.pow((1 + r / n), n * 1);\n      const interestEarnedThisYear = valueAtYearEnd - currentPrincipal;\n      annualBreakdown.push({\n        year,\n        value: parseFloat(valueAtYearEnd.toFixed(2)),\n        interestEarned: parseFloat(interestEarnedThisYear.toFixed(2)),\n      });\n      currentPrincipal = valueAtYearEnd;\n    }\n    \n    setResult({\n      futureValue: parseFloat(futureValue.toFixed(2)),\n      totalInterest: parseFloat(totalInterest.toFixed(2)),\n      annualBreakdown,\n    });\n  };\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    calculateCompoundInterest(data);\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Compound Interest Calculator</CardTitle>\n        <CardDescription>Calculate the future value of your investment with the power of compounding.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"principal\">Principal Amount ({currency.symbol})</Label>\n              <Input id=\"principal\" type=\"number\" step=\"any\" {...form.register('principal')} />\n              {form.formState.errors.principal && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.principal.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"rate\">Annual Interest Rate (%)</Label>\n              <Input id=\"rate\" type=\"number\" step=\"any\" {...form.register('rate')} />\n              {form.formState.errors.rate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.rate.message}</p>}\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"time\">Time Period (Years)</Label>\n              <Input id=\"time\" type=\"number\" {...form.register('time')} />\n              {form.formState.errors.time && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.time.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"compoundingFrequency\">Compounding Frequency</Label>\n              <Select onValueChange={(value) => form.setValue('compoundingFrequency', value as FormData['compoundingFrequency'])} defaultValue={form.getValues('compoundingFrequency')}>\n                <SelectTrigger id=\"compoundingFrequency\">\n                  <SelectValue placeholder=\"Select frequency\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"1\">Annually</SelectItem>\n                  <SelectItem value=\"2\">Semi-Annually</SelectItem>\n                  <SelectItem value=\"4\">Quarterly</SelectItem>\n                  <SelectItem value=\"12\">Monthly</SelectItem>\n                </SelectContent>\n              </Select>\n              {form.formState.errors.compoundingFrequency && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.compoundingFrequency.message}</p>}\n            </div>\n          </div>\n           <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"currency-toggle\">Currency</Label>\n              <CurrencyToggle\n                id=\"currency-toggle\"\n                selectedCurrency={currency}\n                onCurrencyChange={setCurrency}\n              />\n            </div>\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6 text-lg\">\n            <p><strong>Future Value:</strong> {currency.symbol}{result.futureValue.toLocaleString()}</p>\n            <p><strong>Total Interest Earned:</strong> {currency.symbol}{result.totalInterest.toLocaleString()}</p>\n          </div>\n\n          <div className=\"mb-8 h-80 md:h-96\">\n             <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={result.annualBreakdown} margin={{ top: 5, right: 20, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                    <XAxis dataKey=\"year\" unit=\"yr\" stroke=\"hsl(var(--muted-foreground))\" />\n                    <YAxis stroke=\"hsl(var(--muted-foreground))\" tickFormatter={(value) => `${currency.symbol}${value.toLocaleString()}`} />\n                    <Tooltip\n                        formatter={(value: number, name: string) => [`${currency.symbol}${value.toLocaleString()}`, name]}\n                        contentStyle={{ backgroundColor: 'hsl(var(--card))', border: '1px solid hsl(var(--border))', borderRadius: 'var(--radius)' }}\n                        labelStyle={{ color: 'hsl(var(--foreground))', fontWeight: 'bold' }}\n                    />\n                    <Legend wrapperStyle={{ color: 'hsl(var(--foreground))' }}/>\n                    <Line type=\"monotone\" dataKey=\"value\" name=\"Investment Value\" stroke=\"hsl(var(--primary))\" strokeWidth={2} dot={{ r: 4, fill: 'hsl(var(--primary))' }} activeDot={{ r: 6 }} />\n                    <Line type=\"monotone\" dataKey=\"interestEarned\" name=\"Interest Earned (Yearly)\" stroke=\"hsl(var(--accent))\" strokeWidth={2} dot={{ r: 4, fill: 'hsl(var(--accent))' }} activeDot={{ r: 6 }} />\n                </LineChart>\n            </ResponsiveContainer>\n          </div>\n          \n          <h4 className=\"text-lg font-semibold mb-2 font-headline\">Annual Breakdown</h4>\n          <div className=\"max-h-96 overflow-y-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Year</TableHead>\n                  <TableHead>Interest Earned</TableHead>\n                  <TableHead className=\"text-right\">End Value</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {result.annualBreakdown.map((item) => (\n                  <TableRow key={item.year}>\n                    <TableCell>{item.year}</TableCell>\n                    <TableCell>{currency.symbol}{item.interestEarned.toLocaleString()}</TableCell>\n                    <TableCell className=\"text-right\">{currency.symbol}{item.value.toLocaleString()}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1304, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/StockReturnCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  purchasePrice: z.coerce.number().min(0, \"Purchase price must be non-negative\"),\n  sellingPrice: z.coerce.number().min(0, \"Selling price must be non-negative\"),\n  shares: z.coerce.number().min(1, \"Number of shares must be at least 1\"),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  totalInvestment: number;\n  totalReturnValue: number;\n  profitLoss: number;\n  returnPercentage: number;\n}\n\nexport function StockReturnCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { purchasePrice: 100, sellingPrice: 120, shares: 10 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const totalInvestment = data.purchasePrice * data.shares;\n    const totalReturnValue = data.sellingPrice * data.shares;\n    const profitLoss = totalReturnValue - totalInvestment;\n    const returnPercentage = totalInvestment > 0 ? (profitLoss / totalInvestment) * 100 : 0;\n    setResult({ \n        totalInvestment: parseFloat(totalInvestment.toFixed(2)),\n        totalReturnValue: parseFloat(totalReturnValue.toFixed(2)),\n        profitLoss: parseFloat(profitLoss.toFixed(2)),\n        returnPercentage: parseFloat(returnPercentage.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Stock Return Calculator</CardTitle>\n        <CardDescription>Calculate profit or loss from your stock investments.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"purchasePrice\">Purchase Price per Share ({currency.symbol})</Label>\n              <Input id=\"purchasePrice\" type=\"number\" step=\"any\" {...form.register('purchasePrice')} />\n              {form.formState.errors.purchasePrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.purchasePrice.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"sellingPrice\">Selling Price per Share ({currency.symbol})</Label>\n              <Input id=\"sellingPrice\" type=\"number\" step=\"any\" {...form.register('sellingPrice')} />\n              {form.formState.errors.sellingPrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.sellingPrice.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"shares\">Number of Shares</Label>\n            <Input id=\"shares\" type=\"number\" {...form.register('shares')} />\n            {form.formState.errors.shares && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.shares.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <div className=\"space-y-2\">\n            <p><strong>Total Investment:</strong> {currency.symbol}{result.totalInvestment.toLocaleString()}</p>\n            <p><strong>Total Return Value:</strong> {currency.symbol}{result.totalReturnValue.toLocaleString()}</p>\n            <p><strong>Profit/Loss:</strong> {currency.symbol}{result.profitLoss.toLocaleString()}</p>\n            <p><strong>Return Percentage:</strong> {result.returnPercentage.toLocaleString()}%</p>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1669, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/DividendYieldCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  annualDividendPerShare: z.coerce.number().min(0, \"Annual dividend must be non-negative\"),\n  currentMarketPrice: z.coerce.number().min(0.01, \"Market price must be greater than 0\"),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  dividendYield: number;\n}\n\nexport function DividendYieldCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { annualDividendPerShare: 5, currentMarketPrice: 100 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const dividendYield = (data.annualDividendPerShare / data.currentMarketPrice) * 100;\n    setResult({ dividendYield: parseFloat(dividendYield.toFixed(2)) });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Dividend Yield Calculator</CardTitle>\n        <CardDescription>Determine the dividend yield of a stock.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"annualDividendPerShare\">Annual Dividend per Share ({currency.symbol})</Label>\n            <Input id=\"annualDividendPerShare\" type=\"number\" step=\"any\" {...form.register('annualDividendPerShare')} />\n            {form.formState.errors.annualDividendPerShare && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.annualDividendPerShare.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currentMarketPrice\">Current Market Price per Share ({currency.symbol})</Label>\n            <Input id=\"currentMarketPrice\" type=\"number\" step=\"any\" {...form.register('currentMarketPrice')} />\n            {form.formState.errors.currentMarketPrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.currentMarketPrice.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Dividend Yield:</strong> {result.dividendYield.toLocaleString()}%</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1921, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/RiskRewardRatioCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  potentialProfit: z.coerce.number().min(0.01, \"Potential profit must be greater than 0\"),\n  potentialLoss: z.coerce.number().min(0.01, \"Potential loss must be greater than 0\"),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  riskRewardRatio: string; // Display as \"1 : X\"\n}\n\nexport function RiskRewardRatioCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { potentialProfit: 30, potentialLoss: 10 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const ratio = data.potentialProfit / data.potentialLoss;\n    setResult({ riskRewardRatio: `1 : ${ratio.toFixed(2)}` });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Risk/Reward Ratio Calculator</CardTitle>\n        <CardDescription>Assess the risk vs. potential reward of an investment or trade.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"potentialProfit\">Potential Profit ({currency.symbol})</Label>\n            <Input id=\"potentialProfit\" type=\"number\" step=\"any\" {...form.register('potentialProfit')} />\n            {form.formState.errors.potentialProfit && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.potentialProfit.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"potentialLoss\">Potential Loss (Risk) ({currency.symbol})</Label>\n            <Input id=\"potentialLoss\" type=\"number\" step=\"any\" {...form.register('potentialLoss')} />\n            {form.formState.errors.potentialLoss && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.potentialLoss.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency for Input Fields</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Risk/Reward Ratio:</strong> {result.riskRewardRatio}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/VolatilityCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  historicalPrices: z.string().min(1, \"Please enter historical prices\"), // Comma-separated numbers\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  volatility: number; // Placeholder, actual calculation is complex\n  priceCount: number;\n  averagePrice: number;\n}\n\nexport function VolatilityCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { historicalPrices: \"100,102,98,105,103\" },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const prices = data.historicalPrices.split(',').map(p => parseFloat(p.trim())).filter(p => !isNaN(p));\n    if (prices.length < 2) {\n        form.setError(\"historicalPrices\", { type: \"manual\", message: \"Please enter at least two valid prices.\"});\n        setResult(null);\n        return;\n    }\n    // Placeholder: Real volatility (e.g., standard deviation of returns) is more complex.\n    // This is a simplified version for UI demonstration.\n    const averagePrice = prices.reduce((sum, price) => sum + price, 0) / prices.length;\n    const variance = prices.reduce((sum, price) => sum + Math.pow(price - averagePrice, 2), 0) / prices.length;\n    const standardDeviation = Math.sqrt(variance);\n\n    setResult({ \n        volatility: parseFloat(standardDeviation.toFixed(2)), // Simplified: using standard deviation of prices\n        priceCount: prices.length,\n        averagePrice: parseFloat(averagePrice.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Volatility Calculator</CardTitle>\n        <CardDescription>Measure the volatility of an investment based on historical prices. (Simplified)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"historicalPrices\">Historical Prices ({currency.symbol}) (comma-separated)</Label>\n            <Textarea id=\"historicalPrices\" {...form.register('historicalPrices')} placeholder=\"e.g., 100,102,98,105,103\" />\n            {form.formState.errors.historicalPrices && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.historicalPrices.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency (for display context)</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results (Simplified)</h3>\n          <p><strong>Calculated Volatility (Std. Dev. of Prices):</strong> {currency.symbol}{result.volatility.toLocaleString()}</p>\n          <p><strong>Number of Prices Analyzed:</strong> {result.priceCount}</p>\n          <p><strong>Average Price:</strong> {currency.symbol}{result.averagePrice.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2461, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/BitcoinRoiCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  initialInvestment: z.coerce.number().min(0.01, \"Initial investment must be greater than 0\"),\n  currentValue: z.coerce.number().min(0, \"Current value must be non-negative\"),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  roiPercentage: number;\n  profitLoss: number;\n}\n\nexport function BitcoinRoiCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { initialInvestment: 1000, currentValue: 1500 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const profitLoss = data.currentValue - data.initialInvestment;\n    const roiPercentage = (profitLoss / data.initialInvestment) * 100;\n    setResult({ \n      roiPercentage: parseFloat(roiPercentage.toFixed(2)),\n      profitLoss: parseFloat(profitLoss.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Bitcoin ROI Calculator</CardTitle>\n        <CardDescription>Calculate your Return on Investment for Bitcoin or other crypto assets.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"initialInvestment\">Initial Investment ({currency.symbol})</Label>\n            <Input id=\"initialInvestment\" type=\"number\" step=\"any\" {...form.register('initialInvestment')} />\n            {form.formState.errors.initialInvestment && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.initialInvestment.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currentValue\">Current Value ({currency.symbol})</Label>\n            <Input id=\"currentValue\" type=\"number\" step=\"any\" {...form.register('currentValue')} />\n            {form.formState.errors.currentValue && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.currentValue.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Profit/Loss:</strong> {currency.symbol}{result.profitLoss.toLocaleString()}</p>\n          <p><strong>ROI Percentage:</strong> {result.roiPercentage.toLocaleString()}%</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2733, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/CryptoDcaCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  investmentAmount: z.coerce.number().min(1, \"Investment amount per period must be at least 1\"),\n  numberOfPeriods: z.coerce.number().int().min(1, \"Number of periods must be at least 1\"),\n  averagePrice: z.coerce.number().min(0.01, \"Estimated average price must be greater than 0\"),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  totalInvested: number;\n  totalCryptoAcquired: number; // Placeholder\n  averageCostPerUnit: number; // Placeholder\n}\n\nexport function CryptoDcaCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { investmentAmount: 100, numberOfPeriods: 12, averagePrice: 30000 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // Simplified DCA calculation for UI demonstration\n    const totalInvested = data.investmentAmount * data.numberOfPeriods;\n    const totalCryptoAcquired = totalInvested / data.averagePrice; // Highly simplified\n    const averageCostPerUnit = data.averagePrice; // Simplified\n\n    setResult({ \n        totalInvested: parseFloat(totalInvested.toFixed(2)),\n        totalCryptoAcquired: parseFloat(totalCryptoAcquired.toFixed(6)),\n        averageCostPerUnit: parseFloat(averageCostPerUnit.toFixed(2))\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Crypto DCA Calculator</CardTitle>\n        <CardDescription>Simulate Dollar Cost Averaging for crypto investments. (Simplified)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"investmentAmount\">Investment Amount per Period ({currency.symbol})</Label>\n            <Input id=\"investmentAmount\" type=\"number\" step=\"any\" {...form.register('investmentAmount')} />\n            {form.formState.errors.investmentAmount && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.investmentAmount.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"numberOfPeriods\">Number of Investment Periods</Label>\n            <Input id=\"numberOfPeriods\" type=\"number\" {...form.register('numberOfPeriods')} />\n            {form.formState.errors.numberOfPeriods && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.numberOfPeriods.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"averagePrice\">Estimated Average Crypto Price ({currency.symbol})</Label>\n            <Input id=\"averagePrice\" type=\"number\" step=\"any\" {...form.register('averagePrice')} />\n            {form.formState.errors.averagePrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.averagePrice.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results (Simplified)</h3>\n          <p><strong>Total Amount Invested:</strong> {currency.symbol}{result.totalInvested.toLocaleString()}</p>\n          <p><strong>Estimated Total Crypto Acquired:</strong> {result.totalCryptoAcquired.toLocaleString()} units</p>\n          <p><strong>Estimated Average Cost per Unit:</strong> {currency.symbol}{result.averageCostPerUnit.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3061, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/BlockchainFeeCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  gasUnits: z.coerce.number().min(1, \"Gas units must be at least 1\"),\n  gasPrice: z.coerce.number().min(0.000000001, \"Gas price must be positive\"), // e.g., Gwei for Ethereum\n  network: z.enum(['ethereum', 'bitcoin', 'polygon', 'solana']), // Example networks\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  estimatedFee: number; // In native currency of the network (e.g., ETH, BTC)\n  estimatedFeeFiat: number; // In selected display currency\n}\n\n// Placeholder conversion rates (network native token to USD)\nconst NETWORK_TO_USD_RATES: Record<string, number> = {\n  ethereum: 2000,  // 1 ETH = 2000 USD\n  bitcoin: 30000, // 1 BTC = 30000 USD (for transaction fee context if applicable)\n  polygon: 0.8,   // 1 MATIC = 0.8 USD\n  solana: 20,     // 1 SOL = 20 USD\n};\nconst NETWORK_CURRENCY_SYMBOL: Record<string, string> = {\n  ethereum: 'ETH',\n  bitcoin: 'BTC', \n  polygon: 'MATIC',\n  solana: 'SOL',\n};\n\n\nexport function BlockchainFeeCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { gasUnits: 21000, gasPrice: 20, network: 'ethereum' },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // Simplified fee calculation. Real fees are complex and dynamic.\n    // Bitcoin fees work differently (sat/vB). This is a generic placeholder.\n    let feeInNativeToken = 0;\n    if (data.network === 'ethereum' || data.network === 'polygon') {\n      feeInNativeToken = (data.gasUnits * data.gasPrice) / 1_000_000_000; // Gwei to ETH/MATIC\n    } else if (data.network === 'solana') {\n      feeInNativeToken = (data.gasUnits * data.gasPrice) / 1_000_000_000; // Lamports to SOL (assuming gasPrice in lamports/CU)\n    } else { // Bitcoin placeholder\n      feeInNativeToken = (data.gasUnits * data.gasPrice) / 100_000_000; // Assuming gasUnits = vBytes, gasPrice = satoshis/vByte\n    }\n    \n    const networkRate = NETWORK_TO_USD_RATES[data.network] || 1;\n    const estimatedFeeInUsd = feeInNativeToken * networkRate;\n\n    // Convert USD to selected display currency (very rough, no real-time rates)\n    const usdToSelectedCurrencyRate = currency.value === 'USD' ? 1 : (1 / (AVAILABLE_CURRENCIES.find(c=>c.value === 'USD')?.value === currency.value ? 1 : (currency.symbol === '€' ? 1.1 : (currency.symbol === '£' ? 1.2 : 0.012 ) ) ) ); // Mock\n    const estimatedFeeFiat = estimatedFeeInUsd * usdToSelectedCurrencyRate;\n\n\n    setResult({ \n        estimatedFee: parseFloat(feeInNativeToken.toFixed(8)),\n        estimatedFeeFiat: parseFloat(estimatedFeeFiat.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Blockchain Fee Calculator</CardTitle>\n        <CardDescription>Estimate blockchain transaction fees. (Highly Simplified)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"network\">Blockchain Network</Label>\n            <Select onValueChange={(value) => form.setValue('network', value as FormData['network'])} defaultValue={form.getValues('network')}>\n              <SelectTrigger id=\"network\"><SelectValue placeholder=\"Select network\" /></SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"ethereum\">Ethereum (Gas Price in Gwei)</SelectItem>\n                <SelectItem value=\"bitcoin\">Bitcoin (Gas Price in sats/vB, Gas Units as vBytes)</SelectItem>\n                <SelectItem value=\"polygon\">Polygon (Gas Price in Gwei)</SelectItem>\n                <SelectItem value=\"solana\">Solana (Gas Price in lamports/CU)</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div>\n            <Label htmlFor=\"gasUnits\">Gas Units / vBytes / Compute Units</Label>\n            <Input id=\"gasUnits\" type=\"number\" {...form.register('gasUnits')} />\n            {form.formState.errors.gasUnits && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.gasUnits.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"gasPrice\">Gas Price (Gwei / sats/vB / lamports/CU)</Label>\n            <Input id=\"gasPrice\" type=\"number\" step=\"any\" {...form.register('gasPrice')} />\n            {form.formState.errors.gasPrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.gasPrice.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Display Fiat Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results (Simplified Estimate)</h3>\n          <p><strong>Estimated Fee (Native Token):</strong> {result.estimatedFee.toLocaleString()} {NETWORK_CURRENCY_SYMBOL[form.getValues(\"network\")]}</p>\n          <p><strong>Estimated Fee (Fiat):</strong> {currency.symbol}{result.estimatedFeeFiat.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3440, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/CryptoTaxCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  totalGains: z.coerce.number().min(0, \"Total gains must be non-negative\"),\n  taxRate: z.coerce.number().min(0, \"Tax rate must be non-negative\").max(100, \"Tax rate cannot exceed 100%\"),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  estimatedTax: number;\n}\n\nexport function CryptoTaxCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { totalGains: 5000, taxRate: 20 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const estimatedTax = (data.totalGains * data.taxRate) / 100;\n    setResult({ estimatedTax: parseFloat(estimatedTax.toFixed(2)) });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Crypto Tax Calculator</CardTitle>\n        <CardDescription>Estimate potential taxes on your crypto gains. (For informational purposes only, consult a tax professional)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"totalGains\">Total Crypto Gains ({currency.symbol})</Label>\n            <Input id=\"totalGains\" type=\"number\" step=\"any\" {...form.register('totalGains')} />\n            {form.formState.errors.totalGains && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.totalGains.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"taxRate\">Applicable Tax Rate (%)</Label>\n            <Input id=\"taxRate\" type=\"number\" step=\"any\" {...form.register('taxRate')} />\n            {form.formState.errors.taxRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.taxRate.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results (Estimate)</h3>\n          <p><strong>Estimated Tax Liability:</strong> {currency.symbol}{result.estimatedTax.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3688, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/IcoIdoRoiCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  investmentAmount: z.coerce.number().min(0.01, \"Investment amount must be greater than 0\"),\n  tokensReceived: z.coerce.number().min(0.000001, \"Tokens received must be positive\"),\n  currentTokenPrice: z.coerce.number().min(0, \"Current token price must be non-negative\"),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  currentValue: number;\n  profitLoss: number;\n  roiPercentage: number;\n}\n\nexport function IcoIdoRoiCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { investmentAmount: 100, tokensReceived: 1000, currentTokenPrice: 0.5 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const currentValue = data.tokensReceived * data.currentTokenPrice;\n    const profitLoss = currentValue - data.investmentAmount;\n    const roiPercentage = data.investmentAmount > 0 ? (profitLoss / data.investmentAmount) * 100 : 0;\n    setResult({ \n        currentValue: parseFloat(currentValue.toFixed(2)),\n        profitLoss: parseFloat(profitLoss.toFixed(2)),\n        roiPercentage: parseFloat(roiPercentage.toFixed(2))\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">ICO/IDO ROI Calculator</CardTitle>\n        <CardDescription>Calculate ROI for your Initial Coin Offering (ICO) or Initial DEX Offering (IDO) investments.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"investmentAmount\">Total Investment Amount ({currency.symbol})</Label>\n            <Input id=\"investmentAmount\" type=\"number\" step=\"any\" {...form.register('investmentAmount')} />\n            {form.formState.errors.investmentAmount && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.investmentAmount.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"tokensReceived\">Number of Tokens Received</Label>\n            <Input id=\"tokensReceived\" type=\"number\" step=\"any\" {...form.register('tokensReceived')} />\n            {form.formState.errors.tokensReceived && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.tokensReceived.message}</p>}\n          </div>\n           <div>\n            <Label htmlFor=\"currentTokenPrice\">Current Price per Token ({currency.symbol})</Label>\n            <Input id=\"currentTokenPrice\" type=\"number\" step=\"any\" {...form.register('currentTokenPrice')} />\n            {form.formState.errors.currentTokenPrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.currentTokenPrice.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Current Value of Tokens:</strong> {currency.symbol}{result.currentValue.toLocaleString()}</p>\n          <p><strong>Profit/Loss:</strong> {currency.symbol}{result.profitLoss.toLocaleString()}</p>\n          <p><strong>ROI Percentage:</strong> {result.roiPercentage.toLocaleString()}%</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4016, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/PortfolioAllocationCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\nimport { ResponsiveContainer, PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\n\nconst formSchema = z.object({\n  stocks: z.coerce.number().min(0, \"Value must be non-negative\").optional(),\n  bonds: z.coerce.number().min(0, \"Value must be non-negative\").optional(),\n  crypto: z.coerce.number().min(0, \"Value must be non-negative\").optional(),\n  realEstate: z.coerce.number().min(0, \"Value must be non-negative\").optional(),\n  cash: z.coerce.number().min(0, \"Value must be non-negative\").optional(),\n}).refine(data => (data.stocks || 0) + (data.bonds || 0) + (data.crypto || 0) + (data.realEstate || 0) + (data.cash || 0) > 0, {\n  message: \"At least one asset class must have a value greater than 0.\",\n  path: [\"stocks\"], // Arbitrary path for general error\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\ninterface AllocationData {\n  name: string;\n  value: number;\n  percentage: number;\n  fill: string;\n}\n\nconst COLORS = ['hsl(var(--chart-1))', 'hsl(var(--chart-2))', 'hsl(var(--chart-3))', 'hsl(var(--chart-4))', 'hsl(var(--chart-5))'];\n\nexport function PortfolioAllocationCalculator() { \n  const [allocation, setAllocation] = useState<AllocationData[] | null>(null);\n  const [totalValue, setTotalValue] = useState<number>(0);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { stocks: 5000, bonds: 3000, crypto: 1000, realEstate: 0, cash: 1000 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const assets = [\n      { name: 'Stocks', value: data.stocks || 0 },\n      { name: 'Bonds', value: data.bonds || 0 },\n      { name: 'Crypto', value: data.crypto || 0 },\n      { name: 'Real Estate', value: data.realEstate || 0 },\n      { name: 'Cash', value: data.cash || 0 },\n    ].filter(asset => asset.value > 0);\n\n    const currentTotalValue = assets.reduce((sum, asset) => sum + asset.value, 0);\n    setTotalValue(currentTotalValue);\n\n    const allocationData: AllocationData[] = assets.map((asset, index) => ({\n      ...asset,\n      percentage: parseFloat(((asset.value / currentTotalValue) * 100).toFixed(2)),\n      fill: COLORS[index % COLORS.length],\n    }));\n    setAllocation(allocationData);\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Portfolio Allocation Calculator</CardTitle>\n        <CardDescription>Plan your asset allocation strategy by inputting values for different asset classes.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"stocks\">Stocks Value ({currency.symbol})</Label>\n              <Input id=\"stocks\" type=\"number\" step=\"any\" {...form.register('stocks')} />\n            </div>\n            <div>\n              <Label htmlFor=\"bonds\">Bonds Value ({currency.symbol})</Label>\n              <Input id=\"bonds\" type=\"number\" step=\"any\" {...form.register('bonds')} />\n            </div>\n            <div>\n              <Label htmlFor=\"crypto\">Crypto Value ({currency.symbol})</Label>\n              <Input id=\"crypto\" type=\"number\" step=\"any\" {...form.register('crypto')} />\n            </div>\n            <div>\n              <Label htmlFor=\"realEstate\">Real Estate Value ({currency.symbol})</Label>\n              <Input id=\"realEstate\" type=\"number\" step=\"any\" {...form.register('realEstate')} />\n            </div>\n             <div>\n              <Label htmlFor=\"cash\">Cash Value ({currency.symbol})</Label>\n              <Input id=\"cash\" type=\"number\" step=\"any\" {...form.register('cash')} />\n            </div>\n          </div>\n           {form.formState.errors.stocks && typeof form.formState.errors.stocks.message === 'string' && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.stocks.message}</p>}\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate Allocation</Button>\n        </CardFooter>\n      </form>\n\n      {allocation && allocation.length > 0 && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Portfolio Allocation</h3>\n          <p className=\"mb-4\"><strong>Total Portfolio Value:</strong> {currency.symbol}{totalValue.toLocaleString()}</p>\n          <div className=\"h-80 md:h-96 mb-6\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={allocation}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percentage }) => `${name}: ${percentage}%`}\n                  outerRadius={100}\n                  dataKey=\"value\"\n                >\n                  {allocation.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.fill} />\n                  ))}\n                </Pie>\n                <Tooltip formatter={(value: number, name: string, props: {payload: AllocationData}) => [`${currency.symbol}${value.toLocaleString()} (${props.payload.percentage}%)`, name]} />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n           <ul className=\"space-y-1\">\n            {allocation.map(item => (\n              <li key={item.name} className=\"flex justify-between\">\n                <span>{item.name}:</span>\n                <span>{currency.symbol}{item.value.toLocaleString()} ({item.percentage}%)</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4509, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/LoanVsInvestmentCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  loanAmount: z.coerce.number().min(1, \"Loan amount must be greater than 0\"),\n  loanInterestRate: z.coerce.number().min(0, \"Loan interest rate must be non-negative\").max(100),\n  investmentReturnRate: z.coerce.number().min(0, \"Investment return rate must be non-negative\").max(100),\n  periodYears: z.coerce.number().min(1, \"Period must be at least 1 year\").max(50),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  costOfLoan: number; // Total interest paid over period\n  potentialInvestmentGrowth: number; // Growth if loanAmount was invested\n  netDifference: number; // investmentGrowth - costOfLoan\n  decisionGuidance: string;\n}\n\nexport function LoanVsInvestmentCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { loanAmount: 10000, loanInterestRate: 5, investmentReturnRate: 7, periodYears: 5 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // Simplified calculations for demonstration\n    const rLoan = data.loanInterestRate / 100;\n    const rInvest = data.investmentReturnRate / 100;\n    const t = data.periodYears;\n    const P = data.loanAmount;\n\n    // Assuming simple interest for loan cost for simplicity, real loan cost involves amortization\n    const costOfLoanSimple = P * rLoan * t;\n\n    // Assuming compound interest for investment growth\n    const potentialInvestmentGrowthValue = P * Math.pow(1 + rInvest, t);\n    const investmentGain = potentialInvestmentGrowthValue - P;\n\n    const netDifference = investmentGain - costOfLoanSimple;\n    let decisionGuidance = \"\";\n    if (netDifference > 0) {\n        decisionGuidance = `Investing appears potentially more beneficial by ${currency.symbol}${netDifference.toLocaleString()} over ${t} years (Simplified).`;\n    } else if (netDifference < 0) {\n        decisionGuidance = `Paying off the loan appears potentially more beneficial by ${currency.symbol}${Math.abs(netDifference).toLocaleString()} over ${t} years (Simplified).`;\n    } else {\n        decisionGuidance = \"The outcomes are roughly similar based on these simplified calculations.\";\n    }\n\n\n    setResult({ \n        costOfLoan: parseFloat(costOfLoanSimple.toFixed(2)),\n        potentialInvestmentGrowth: parseFloat(investmentGain.toFixed(2)),\n        netDifference: parseFloat(netDifference.toFixed(2)),\n        decisionGuidance\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Loan vs. Investment Calculator</CardTitle>\n        <CardDescription>Compare paying off loans vs. investing the same amount. (Simplified)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"loanAmount\">Amount to Pay Loan / Invest ({currency.symbol})</Label>\n            <Input id=\"loanAmount\" type=\"number\" step=\"any\" {...form.register('loanAmount')} />\n            {form.formState.errors.loanAmount && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.loanAmount.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"loanInterestRate\">Loan Annual Interest Rate (%)</Label>\n              <Input id=\"loanInterestRate\" type=\"number\" step=\"any\" {...form.register('loanInterestRate')} />\n              {form.formState.errors.loanInterestRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.loanInterestRate.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"investmentReturnRate\">Expected Annual Investment Return Rate (%)</Label>\n              <Input id=\"investmentReturnRate\" type=\"number\" step=\"any\" {...form.register('investmentReturnRate')} />\n              {form.formState.errors.investmentReturnRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.investmentReturnRate.message}</p>}\n            </div>\n          </div>\n           <div>\n            <Label htmlFor=\"periodYears\">Comparison Period (Years)</Label>\n            <Input id=\"periodYears\" type=\"number\" {...form.register('periodYears')} />\n            {form.formState.errors.periodYears && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.periodYears.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Compare</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Comparison Results (Simplified)</h3>\n          <p><strong>Estimated Cost of Loan (Interest Paid):</strong> {currency.symbol}{result.costOfLoan.toLocaleString()}</p>\n          <p><strong>Potential Investment Gain:</strong> {currency.symbol}{result.potentialInvestmentGrowth.toLocaleString()}</p>\n          <p><strong>Net Difference (Investment Gain - Loan Cost):</strong> {currency.symbol}{result.netDifference.toLocaleString()}</p>\n          <p className=\"mt-2 font-semibold\">{result.decisionGuidance}</p>\n          <p className=\"text-xs mt-2 text-muted-foreground\">Note: This is a simplified comparison. Real loan calculations involve amortization. Investment returns are not guaranteed.</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;;;;;;;;AAYA,MAAM,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,YAAY,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACrC,kBAAkB,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,2CAA2C,GAAG,CAAC;IAC1F,sBAAsB,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,+CAA+C,GAAG,CAAC;IAClG,aAAa,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,kCAAkC,GAAG,CAAC;AAC9E;AAUO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4B;IAC/D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,8IAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,UAAU,8IAAA,CAAA,uBAAoB,CAAC,EAAE;IAE/H,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAY;QAC7B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YAAE,YAAY;YAAO,kBAAkB;YAAG,sBAAsB;YAAG,aAAa;QAAE;IACnG;IAEA,MAAM,WAAoC,CAAC;QACzC,4CAA4C;QAC5C,MAAM,QAAQ,KAAK,gBAAgB,GAAG;QACtC,MAAM,UAAU,KAAK,oBAAoB,GAAG;QAC5C,MAAM,IAAI,KAAK,WAAW;QAC1B,MAAM,IAAI,KAAK,UAAU;QAEzB,8FAA8F;QAC9F,MAAM,mBAAmB,IAAI,QAAQ;QAErC,mDAAmD;QACnD,MAAM,iCAAiC,IAAI,KAAK,GAAG,CAAC,IAAI,SAAS;QACjE,MAAM,iBAAiB,iCAAiC;QAExD,MAAM,gBAAgB,iBAAiB;QACvC,IAAI,mBAAmB;QACvB,IAAI,gBAAgB,GAAG;YACnB,mBAAmB,CAAC,iDAAiD,EAAE,SAAS,MAAM,GAAG,cAAc,cAAc,GAAG,MAAM,EAAE,EAAE,oBAAoB,CAAC;QAC3J,OAAO,IAAI,gBAAgB,GAAG;YAC1B,mBAAmB,CAAC,2DAA2D,EAAE,SAAS,MAAM,GAAG,KAAK,GAAG,CAAC,eAAe,cAAc,GAAG,MAAM,EAAE,EAAE,oBAAoB,CAAC;QAC/K,OAAO;YACH,mBAAmB;QACvB;QAGA,UAAU;YACN,YAAY,WAAW,iBAAiB,OAAO,CAAC;YAChD,2BAA2B,WAAW,eAAe,OAAO,CAAC;YAC7D,eAAe,WAAW,cAAc,OAAO,CAAC;YAChD;QACJ;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;kCAC9C,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;;kCAChC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;;4CAAa;4CAA8B,SAAS,MAAM;4CAAC;;;;;;;kDAC1E,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAa,MAAK;wCAAS,MAAK;wCAAO,GAAG,KAAK,QAAQ,CAAC,aAAa;;;;;;oCAC9E,KAAK,SAAS,CAAC,MAAM,CAAC,UAAU,kBAAI,8OAAC;wCAAE,WAAU;kDAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;;;;;;;;;;;;0CAE7H,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAmB;;;;;;0DAClC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAmB,MAAK;gDAAS,MAAK;gDAAO,GAAG,KAAK,QAAQ,CAAC,mBAAmB;;;;;;4CAC1F,KAAK,SAAS,CAAC,MAAM,CAAC,gBAAgB,kBAAI,8OAAC;gDAAE,WAAU;0DAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO;;;;;;;;;;;;kDAEzI,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAuB;;;;;;0DACtC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAuB,MAAK;gDAAS,MAAK;gDAAO,GAAG,KAAK,QAAQ,CAAC,uBAAuB;;;;;;4CAClG,KAAK,SAAS,CAAC,MAAM,CAAC,oBAAoB,kBAAI,8OAAC;gDAAE,WAAU;0DAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO;;;;;;;;;;;;;;;;;;0CAGlJ,8OAAC;;kDACA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAc;;;;;;kDAC7B,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAc,MAAK;wCAAU,GAAG,KAAK,QAAQ,CAAC,cAAc;;;;;;oCACrE,KAAK,SAAS,CAAC,MAAM,CAAC,WAAW,kBAAI,8OAAC;wCAAE,WAAU;kDAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO;;;;;;;;;;;;0CAE/H,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAkB;;;;;;kDACjC,8OAAC,8IAAA,CAAA,iBAAc;wCACb,IAAG;wCACH,kBAAkB;wCAClB,kBAAkB;;;;;;;;;;;;;;;;;;kCAIxB,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,WAAU;sCAAmB;;;;;;;;;;;;;;;;;YAItD,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,8OAAC;;0CAAE,8OAAC;0CAAO;;;;;;4BAAgD;4BAAE,SAAS,MAAM;4BAAE,OAAO,UAAU,CAAC,cAAc;;;;;;;kCAC9G,8OAAC;;0CAAE,8OAAC;0CAAO;;;;;;4BAAmC;4BAAE,SAAS,MAAM;4BAAE,OAAO,yBAAyB,CAAC,cAAc;;;;;;;kCAChH,8OAAC;;0CAAE,8OAAC;0CAAO;;;;;;4BAAsD;4BAAE,SAAS,MAAM;4BAAE,OAAO,aAAa,CAAC,cAAc;;;;;;;kCACvH,8OAAC;wBAAE,WAAU;kCAAsB,OAAO,gBAAgB;;;;;;kCAC1D,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;;;;;;;AAK5D","debugId":null}},
    {"offset": {"line": 4910, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/RealEstateRoiCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  purchasePrice: z.coerce.number().min(1, \"Purchase price must be greater than 0\"),\n  salePrice: z.coerce.number().min(0, \"Sale price must be non-negative\"),\n  totalExpenses: z.coerce.number().min(0, \"Total expenses must be non-negative (renovations, fees, etc.)\"),\n  rentalIncome: z.coerce.number().min(0, \"Total rental income must be non-negative (if applicable)\").optional(),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  netProfit: number;\n  roiPercentage: number;\n  initialInvestment: number;\n}\n\nexport function RealEstateRoiCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { purchasePrice: 200000, salePrice: 250000, totalExpenses: 10000, rentalIncome: 12000 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const initialInvestment = data.purchasePrice + data.totalExpenses;\n    const totalRevenue = data.salePrice + (data.rentalIncome || 0);\n    const netProfit = totalRevenue - initialInvestment;\n    const roiPercentage = initialInvestment > 0 ? (netProfit / initialInvestment) * 100 : 0;\n    \n    setResult({ \n        netProfit: parseFloat(netProfit.toFixed(2)),\n        roiPercentage: parseFloat(roiPercentage.toFixed(2)),\n        initialInvestment: parseFloat(initialInvestment.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Real Estate ROI Calculator</CardTitle>\n        <CardDescription>Calculate the Return on Investment for your real estate properties.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"purchasePrice\">Purchase Price ({currency.symbol})</Label>\n              <Input id=\"purchasePrice\" type=\"number\" step=\"any\" {...form.register('purchasePrice')} />\n              {form.formState.errors.purchasePrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.purchasePrice.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"salePrice\">Sale Price ({currency.symbol})</Label>\n              <Input id=\"salePrice\" type=\"number\" step=\"any\" {...form.register('salePrice')} />\n              {form.formState.errors.salePrice && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.salePrice.message}</p>}\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n             <div>\n              <Label htmlFor=\"totalExpenses\">Total Expenses ({currency.symbol}) (Renovations, Fees, etc.)</Label>\n              <Input id=\"totalExpenses\" type=\"number\" step=\"any\" {...form.register('totalExpenses')} />\n              {form.formState.errors.totalExpenses && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.totalExpenses.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"rentalIncome\">Total Rental Income (Optional) ({currency.symbol})</Label>\n              <Input id=\"rentalIncome\" type=\"number\" step=\"any\" {...form.register('rentalIncome')} />\n              {form.formState.errors.rentalIncome && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.rentalIncome.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate ROI</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Initial Investment (Purchase + Expenses):</strong> {currency.symbol}{result.initialInvestment.toLocaleString()}</p>\n          <p><strong>Net Profit:</strong> {currency.symbol}{result.netProfit.toLocaleString()}</p>\n          <p><strong>ROI Percentage:</strong> {result.roiPercentage.toLocaleString()}%</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/GoalPlanningCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  targetAmount: z.coerce.number().min(1, \"Target amount must be greater than 0\"),\n  yearsToGoal: z.coerce.number().min(1, \"Years to goal must be at least 1\").max(100),\n  expectedReturnRate: z.coerce.number().min(0, \"Expected return rate must be non-negative\").max(100),\n  initialInvestment: z.coerce.number().min(0, \"Initial investment must be non-negative\").optional(),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  requiredMonthlyInvestment: number; // Placeholder\n}\n\nexport function GoalPlanningCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { targetAmount: 50000, yearsToGoal: 5, expectedReturnRate: 7, initialInvestment: 1000 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // Placeholder: Real goal planning calculation (PMT formula) is complex.\n    const r = data.expectedReturnRate / 100 / 12; // Monthly rate\n    const n = data.yearsToGoal * 12; // Number of months\n    const FV = data.targetAmount;\n    const PV = data.initialInvestment || 0;\n\n    let pmt;\n    if (r === 0) { // If rate is 0\n        pmt = (FV - PV) / n;\n    } else {\n        pmt = (FV - PV * Math.pow(1 + r, n)) / ( (Math.pow(1 + r, n) - 1) / r );\n    }\n    \n    setResult({ requiredMonthlyInvestment: parseFloat(pmt.toFixed(2)) });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Financial Goal Planning Calculator</CardTitle>\n        <CardDescription>Plan investments to reach your financial goals. (Calculates monthly investment)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"targetAmount\">Target Amount ({currency.symbol})</Label>\n            <Input id=\"targetAmount\" type=\"number\" step=\"any\" {...form.register('targetAmount')} />\n            {form.formState.errors.targetAmount && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.targetAmount.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"yearsToGoal\">Years to Reach Goal</Label>\n              <Input id=\"yearsToGoal\" type=\"number\" {...form.register('yearsToGoal')} />\n              {form.formState.errors.yearsToGoal && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.yearsToGoal.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"expectedReturnRate\">Expected Annual Return Rate (%)</Label>\n              <Input id=\"expectedReturnRate\" type=\"number\" step=\"any\" {...form.register('expectedReturnRate')} />\n              {form.formState.errors.expectedReturnRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.expectedReturnRate.message}</p>}\n            </div>\n          </div>\n           <div>\n            <Label htmlFor=\"initialInvestment\">Initial Investment (Optional) ({currency.symbol})</Label>\n            <Input id=\"initialInvestment\" type=\"number\" step=\"any\" {...form.register('initialInvestment')} />\n            {form.formState.errors.initialInvestment && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.initialInvestment.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Required Monthly Investment:</strong> {currency.symbol}{result.requiredMonthlyInvestment.toLocaleString()}</p>\n           <p className=\"text-xs mt-2 text-muted-foreground\">Note: Assumes consistent monthly investments and returns compounded monthly. This is a simplified calculation.</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5651, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/TimeValueOfMoneyCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  value: z.coerce.number(), // Can be PV or FV depending on calculationType\n  rate: z.coerce.number().min(0, \"Rate must be non-negative\").max(100),\n  periods: z.coerce.number().min(1, \"Periods must be at least 1\").max(1000),\n  calculationType: z.enum(['FV', 'PV']), // Future Value or Present Value\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  calculatedValue: number;\n  label: string;\n}\n\nexport function TimeValueOfMoneyCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { value: 1000, rate: 5, periods: 10, calculationType: 'FV' },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const r = data.rate / 100;\n    let calculatedValue;\n    let label;\n\n    if (data.calculationType === 'FV') {\n      calculatedValue = data.value * Math.pow(1 + r, data.periods);\n      label = \"Future Value (FV)\";\n    } else { // PV\n      calculatedValue = data.value / Math.pow(1 + r, data.periods);\n      label = \"Present Value (PV)\";\n    }\n    \n    setResult({ calculatedValue: parseFloat(calculatedValue.toFixed(2)), label });\n  };\n\n  const valueLabel = form.watch('calculationType') === 'FV' ? `Present Value (PV) (${currency.symbol})` : `Future Value (FV) (${currency.symbol})`;\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Time Value of Money (TVM) Calculator</CardTitle>\n        <CardDescription>Calculate Present Value (PV) or Future Value (FV).</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"calculationType\">Calculate</Label>\n             <Select onValueChange={(value) => form.setValue('calculationType', value as FormData['calculationType'])} defaultValue={form.getValues('calculationType')}>\n                <SelectTrigger id=\"calculationType\"><SelectValue /></SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"FV\">Future Value (FV)</SelectItem>\n                  <SelectItem value=\"PV\">Present Value (PV)</SelectItem>\n                </SelectContent>\n              </Select>\n          </div>\n          <div>\n            <Label htmlFor=\"value\">{valueLabel}</Label>\n            <Input id=\"value\" type=\"number\" step=\"any\" {...form.register('value')} />\n            {form.formState.errors.value && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.value.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"rate\">Interest Rate per Period (%)</Label>\n              <Input id=\"rate\" type=\"number\" step=\"any\" {...form.register('rate')} />\n              {form.formState.errors.rate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.rate.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"periods\">Number of Periods</Label>\n              <Input id=\"periods\" type=\"number\" {...form.register('periods')} />\n              {form.formState.errors.periods && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.periods.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Result</h3>\n          <p><strong>{result.label}:</strong> {currency.symbol}{result.calculatedValue.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6022, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/SipCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  monthlyInvestment: z.coerce.number().min(1, \"Monthly investment must be greater than 0\"),\n  expectedReturnRate: z.coerce.number().min(0, \"Expected return rate must be non-negative\").max(100),\n  investmentPeriodYears: z.coerce.number().min(1, \"Investment period must be at least 1 year\").max(50),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  totalInvested: number;\n  estimatedReturns: number;\n  futureValue: number;\n}\n\nexport function SipCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { monthlyInvestment: 5000, expectedReturnRate: 12, investmentPeriodYears: 10 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const P = data.monthlyInvestment;\n    const annualRate = data.expectedReturnRate / 100;\n    const i = annualRate / 12; // monthly interest rate\n    const n = data.investmentPeriodYears * 12; // number of months\n\n    const futureValue = P * ( (Math.pow(1 + i, n) - 1) / i ) * (1 + i);\n    const totalInvested = P * n;\n    const estimatedReturns = futureValue - totalInvested;\n    \n    setResult({ \n        totalInvested: parseFloat(totalInvested.toFixed(2)),\n        estimatedReturns: parseFloat(estimatedReturns.toFixed(2)),\n        futureValue: parseFloat(futureValue.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">SIP (Systematic Investment Plan) Calculator</CardTitle>\n        <CardDescription>Project the future value of your SIP investments.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"monthlyInvestment\">Monthly Investment ({currency.symbol})</Label>\n            <Input id=\"monthlyInvestment\" type=\"number\" step=\"any\" {...form.register('monthlyInvestment')} />\n            {form.formState.errors.monthlyInvestment && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.monthlyInvestment.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"expectedReturnRate\">Expected Annual Return Rate (%)</Label>\n              <Input id=\"expectedReturnRate\" type=\"number\" step=\"any\" {...form.register('expectedReturnRate')} />\n              {form.formState.errors.expectedReturnRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.expectedReturnRate.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"investmentPeriodYears\">Investment Period (Years)</Label>\n              <Input id=\"investmentPeriodYears\" type=\"number\" {...form.register('investmentPeriodYears')} />\n              {form.formState.errors.investmentPeriodYears && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.investmentPeriodYears.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Total Amount Invested:</strong> {currency.symbol}{result.totalInvested.toLocaleString()}</p>\n          <p><strong>Estimated Returns:</strong> {currency.symbol}{result.estimatedReturns.toLocaleString()}</p>\n          <p><strong>Estimated Future Value:</strong> {currency.symbol}{result.futureValue.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6358, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/SipVsLumpsumCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  totalInvestment: z.coerce.number().min(1, \"Total investment must be greater than 0\"),\n  expectedReturnRate: z.coerce.number().min(0, \"Expected return rate must be non-negative\").max(100),\n  investmentPeriodYears: z.coerce.number().min(1, \"Investment period must be at least 1 year\").max(50),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  lumpsumFutureValue: number;\n  sipFutureValue: number;\n  totalInvested: number;\n}\n\nexport function SipVsLumpsumCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { totalInvestment: 120000, expectedReturnRate: 12, investmentPeriodYears: 10 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const P_lumpsum = data.totalInvestment;\n    const annualRate = data.expectedReturnRate / 100;\n    const i = annualRate / 12; // monthly interest rate\n    const t_years = data.investmentPeriodYears;\n    const n = t_years * 12; // number of months\n    \n    // Lumpsum Calculation\n    const lumpsumFutureValue = P_lumpsum * Math.pow(1 + annualRate, t_years); // Compounded annually for lumpsum\n\n    // SIP Calculation\n    const P_sip = data.totalInvestment / n; // Monthly investment for SIP\n    const sipFutureValue = P_sip * ( (Math.pow(1 + i, n) - 1) / i ) * (1 + i);\n    \n    setResult({ \n        lumpsumFutureValue: parseFloat(lumpsumFutureValue.toFixed(2)),\n        sipFutureValue: parseFloat(sipFutureValue.toFixed(2)),\n        totalInvested: parseFloat(data.totalInvestment.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">SIP vs. Lumpsum Calculator</CardTitle>\n        <CardDescription>Compare the potential returns of SIP and Lumpsum investment strategies.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"totalInvestment\">Total Investment Amount ({currency.symbol})</Label>\n            <Input id=\"totalInvestment\" type=\"number\" step=\"any\" {...form.register('totalInvestment')} />\n            {form.formState.errors.totalInvestment && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.totalInvestment.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"expectedReturnRate\">Expected Annual Return Rate (%)</Label>\n              <Input id=\"expectedReturnRate\" type=\"number\" step=\"any\" {...form.register('expectedReturnRate')} />\n              {form.formState.errors.expectedReturnRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.expectedReturnRate.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"investmentPeriodYears\">Investment Period (Years)</Label>\n              <Input id=\"investmentPeriodYears\" type=\"number\" {...form.register('investmentPeriodYears')} />\n              {form.formState.errors.investmentPeriodYears && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.investmentPeriodYears.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Compare</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Comparison Results</h3>\n          <p><strong>Total Amount Invested:</strong> {currency.symbol}{result.totalInvested.toLocaleString()}</p>\n          <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n                <h4 className=\"font-semibold\">Lumpsum Investment:</h4>\n                <p>Estimated Future Value: {currency.symbol}{result.lumpsumFutureValue.toLocaleString()}</p>\n            </div>\n            <div>\n                <h4 className=\"font-semibold\">SIP Investment:</h4>\n                <p>Estimated Future Value: {currency.symbol}{result.sipFutureValue.toLocaleString()}</p>\n                 <p className=\"text-xs\">(Monthly investment of {currency.symbol}{(result.totalInvested / (form.getValues(\"investmentPeriodYears\")*12)).toLocaleString()})</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6737, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/SwpCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  initialInvestment: z.coerce.number().min(1, \"Initial investment must be greater than 0\"),\n  monthlyWithdrawal: z.coerce.number().min(1, \"Monthly withdrawal must be greater than 0\"),\n  expectedReturnRate: z.coerce.number().min(0, \"Expected return rate must be non-negative\").max(100),\n  withdrawalPeriodYears: z.coerce.number().min(1, \"Withdrawal period must be at least 1 year\").max(50),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  totalWithdrawn: number;\n  finalBalance: number; // Placeholder\n  yearsToDepletion?: number; // Placeholder\n}\n\nexport function SwpCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { initialInvestment: 1000000, monthlyWithdrawal: 5000, expectedReturnRate: 7, withdrawalPeriodYears: 20 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // Placeholder: Real SWP calculation involves iterative balance reduction.\n    const totalWithdrawn = data.monthlyWithdrawal * data.withdrawalPeriodYears * 12;\n    // Simplified: Does not account for investment growth/depletion accurately.\n    const finalBalance = data.initialInvestment + (data.initialInvestment * (data.expectedReturnRate/100) * data.withdrawalPeriodYears) - totalWithdrawn; \n\n    setResult({ \n        totalWithdrawn: parseFloat(totalWithdrawn.toFixed(2)),\n        finalBalance: parseFloat(finalBalance.toFixed(2)), // This is a very rough estimate\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">SWP (Systematic Withdrawal Plan) Calculator</CardTitle>\n        <CardDescription>Plan your systematic withdrawals from investments. (Simplified)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"initialInvestment\">Initial Investment ({currency.symbol})</Label>\n            <Input id=\"initialInvestment\" type=\"number\" step=\"any\" {...form.register('initialInvestment')} />\n            {form.formState.errors.initialInvestment && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.initialInvestment.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"monthlyWithdrawal\">Desired Monthly Withdrawal ({currency.symbol})</Label>\n            <Input id=\"monthlyWithdrawal\" type=\"number\" step=\"any\" {...form.register('monthlyWithdrawal')} />\n            {form.formState.errors.monthlyWithdrawal && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.monthlyWithdrawal.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"expectedReturnRate\">Expected Annual Return Rate (%)</Label>\n              <Input id=\"expectedReturnRate\" type=\"number\" step=\"any\" {...form.register('expectedReturnRate')} />\n              {form.formState.errors.expectedReturnRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.expectedReturnRate.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"withdrawalPeriodYears\">Withdrawal Period (Years)</Label>\n              <Input id=\"withdrawalPeriodYears\" type=\"number\" {...form.register('withdrawalPeriodYears')} />\n              {form.formState.errors.withdrawalPeriodYears && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.withdrawalPeriodYears.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results (Simplified Estimate)</h3>\n          <p><strong>Total Amount Withdrawn:</strong> {currency.symbol}{result.totalWithdrawn.toLocaleString()}</p>\n          <p><strong>Estimated Final Balance after {form.getValues(\"withdrawalPeriodYears\")} years:</strong> {currency.symbol}{result.finalBalance.toLocaleString()}</p>\n          <p className=\"text-xs mt-2 text-muted-foreground\">Note: This is a simplified calculation. Actual final balance will vary based on market performance and precise withdrawal timing.</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;;;;;;;;AAYA,MAAM,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,mBAAmB,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5C,mBAAmB,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5C,oBAAoB,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,6CAA6C,GAAG,CAAC;IAC9F,uBAAuB,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,6CAA6C,GAAG,CAAC;AACnG;AASO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4B;IAC/D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,8IAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,UAAU,8IAAA,CAAA,uBAAoB,CAAC,EAAE;IAE/H,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAY;QAC7B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YAAE,mBAAmB;YAAS,mBAAmB;YAAM,oBAAoB;YAAG,uBAAuB;QAAG;IACzH;IAEA,MAAM,WAAoC,CAAC;QACzC,0EAA0E;QAC1E,MAAM,iBAAiB,KAAK,iBAAiB,GAAG,KAAK,qBAAqB,GAAG;QAC7E,2EAA2E;QAC3E,MAAM,eAAe,KAAK,iBAAiB,GAAI,KAAK,iBAAiB,GAAG,CAAC,KAAK,kBAAkB,GAAC,GAAG,IAAI,KAAK,qBAAqB,GAAI;QAEtI,UAAU;YACN,gBAAgB,WAAW,eAAe,OAAO,CAAC;YAClD,cAAc,WAAW,aAAa,OAAO,CAAC;QAClD;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;kCAC9C,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;;kCAChC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;;4CAAoB;4CAAqB,SAAS,MAAM;4CAAC;;;;;;;kDACxE,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAoB,MAAK;wCAAS,MAAK;wCAAO,GAAG,KAAK,QAAQ,CAAC,oBAAoB;;;;;;oCAC5F,KAAK,SAAS,CAAC,MAAM,CAAC,iBAAiB,kBAAI,8OAAC;wCAAE,WAAU;kDAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO;;;;;;;;;;;;0CAE3I,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;;4CAAoB;4CAA6B,SAAS,MAAM;4CAAC;;;;;;;kDAChF,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAoB,MAAK;wCAAS,MAAK;wCAAO,GAAG,KAAK,QAAQ,CAAC,oBAAoB;;;;;;oCAC5F,KAAK,SAAS,CAAC,MAAM,CAAC,iBAAiB,kBAAI,8OAAC;wCAAE,WAAU;kDAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO;;;;;;;;;;;;0CAE3I,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAqB;;;;;;0DACpC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAqB,MAAK;gDAAS,MAAK;gDAAO,GAAG,KAAK,QAAQ,CAAC,qBAAqB;;;;;;4CAC9F,KAAK,SAAS,CAAC,MAAM,CAAC,kBAAkB,kBAAI,8OAAC;gDAAE,WAAU;0DAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,OAAO;;;;;;;;;;;;kDAE7I,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAwB;;;;;;0DACvC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAwB,MAAK;gDAAU,GAAG,KAAK,QAAQ,CAAC,wBAAwB;;;;;;4CACzF,KAAK,SAAS,CAAC,MAAM,CAAC,qBAAqB,kBAAI,8OAAC;gDAAE,WAAU;0DAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAAC,OAAO;;;;;;;;;;;;;;;;;;0CAGrJ,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAkB;;;;;;kDACjC,8OAAC,8IAAA,CAAA,iBAAc;wCACb,IAAG;wCACH,kBAAkB;wCAClB,kBAAkB;;;;;;;;;;;;;;;;;;kCAIxB,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,WAAU;sCAAmB;;;;;;;;;;;;;;;;;YAItD,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,8OAAC;;0CAAE,8OAAC;0CAAO;;;;;;4BAAgC;4BAAE,SAAS,MAAM;4BAAE,OAAO,cAAc,CAAC,cAAc;;;;;;;kCAClG,8OAAC;;0CAAE,8OAAC;;oCAAO;oCAA+B,KAAK,SAAS,CAAC;oCAAyB;;;;;;;4BAAgB;4BAAE,SAAS,MAAM;4BAAE,OAAO,YAAY,CAAC,cAAc;;;;;;;kCACvJ,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;;;;;;;AAK5D","debugId":null}},
    {"offset": {"line": 7103, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/ElssTaxSavingCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  investmentAmount: z.coerce.number().min(1, \"Investment amount must be greater than 0\").max(150000, \"Max ELSS deduction under Sec 80C is 1,50,000\"), // Max 80C limit\n  taxSlabRate: z.coerce.number().min(0, \"Tax slab rate must be non-negative\").max(100),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  taxSaved: number;\n}\n\nexport function ElssTaxSavingCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'INR') || AVAILABLE_CURRENCIES[0]); // Default to INR\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { investmentAmount: 150000, taxSlabRate: 30 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const effectiveInvestment = Math.min(data.investmentAmount, 150000); // Cap at 80C limit\n    const taxSaved = (effectiveInvestment * data.taxSlabRate) / 100;\n    setResult({ taxSaved: parseFloat(taxSaved.toFixed(2)) });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">ELSS Tax Saving Calculator</CardTitle>\n        <CardDescription>Calculate potential tax savings with ELSS mutual funds under Section 80C.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"investmentAmount\">Investment Amount in ELSS ({currency.symbol})</Label>\n            <Input id=\"investmentAmount\" type=\"number\" step=\"any\" {...form.register('investmentAmount')} />\n            {form.formState.errors.investmentAmount && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.investmentAmount.message}</p>}\n            <p className=\"text-xs text-muted-foreground mt-1\">Maximum deduction under Section 80C is {currency.symbol}1,50,000.</p>\n          </div>\n          <div>\n            <Label htmlFor=\"taxSlabRate\">Your Income Tax Slab Rate (%)</Label>\n            <Input id=\"taxSlabRate\" type=\"number\" step=\"any\" {...form.register('taxSlabRate')} />\n            {form.formState.errors.taxSlabRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.taxSlabRate.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate Tax Saved</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Estimated Tax Saved:</strong> {currency.symbol}{result.taxSaved.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;;;;;;;;AAYA,MAAM,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,kBAAkB,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,4CAA4C,GAAG,CAAC,QAAQ;IACnG,aAAa,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,sCAAsC,GAAG,CAAC;AAClF;AAOO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4B;IAC/D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,8IAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,UAAU,8IAAA,CAAA,uBAAoB,CAAC,EAAE,GAAG,iBAAiB;IAEnJ,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAY;QAC7B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YAAE,kBAAkB;YAAQ,aAAa;QAAG;IAC7D;IAEA,MAAM,WAAoC,CAAC;QACzC,MAAM,sBAAsB,KAAK,GAAG,CAAC,KAAK,gBAAgB,EAAE,SAAS,mBAAmB;QACxF,MAAM,WAAW,AAAC,sBAAsB,KAAK,WAAW,GAAI;QAC5D,UAAU;YAAE,UAAU,WAAW,SAAS,OAAO,CAAC;QAAI;IACxD;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;kCAC9C,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;;kCAChC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;;4CAAmB;4CAA4B,SAAS,MAAM;4CAAC;;;;;;;kDAC9E,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAmB,MAAK;wCAAS,MAAK;wCAAO,GAAG,KAAK,QAAQ,CAAC,mBAAmB;;;;;;oCAC1F,KAAK,SAAS,CAAC,MAAM,CAAC,gBAAgB,kBAAI,8OAAC;wCAAE,WAAU;kDAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO;;;;;;kDACvI,8OAAC;wCAAE,WAAU;;4CAAqC;4CAAwC,SAAS,MAAM;4CAAC;;;;;;;;;;;;;0CAE5G,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAc;;;;;;kDAC7B,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAc,MAAK;wCAAS,MAAK;wCAAO,GAAG,KAAK,QAAQ,CAAC,cAAc;;;;;;oCAChF,KAAK,SAAS,CAAC,MAAM,CAAC,WAAW,kBAAI,8OAAC;wCAAE,WAAU;kDAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO;;;;;;;;;;;;0CAE/H,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAkB;;;;;;kDACjC,8OAAC,8IAAA,CAAA,iBAAc;wCACb,IAAG;wCACH,kBAAkB;wCAClB,kBAAkB;;;;;;;;;;;;;;;;;;kCAIxB,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,WAAU;sCAAmB;;;;;;;;;;;;;;;;;YAItD,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,8OAAC;;0CAAE,8OAAC;0CAAO;;;;;;4BAA6B;4BAAE,SAAS,MAAM;4BAAE,OAAO,QAAQ,CAAC,cAAc;;;;;;;;;;;;;;;;;;;AAKnG","debugId":null}},
    {"offset": {"line": 7364, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/RetirementCorpusCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  currentAge: z.coerce.number().int().min(18, \"Current age must be at least 18\").max(99),\n  retirementAge: z.coerce.number().int().min(19, \"Retirement age must be greater than current age\").max(100),\n  monthlyExpensesAtRetirement: z.coerce.number().min(1, \"Monthly expenses must be greater than 0\"),\n  lifeExpectancyPostRetirement: z.coerce.number().int().min(1, \"Life expectancy must be at least 1 year\").max(50),\n  expectedInflationRate: z.coerce.number().min(0).max(20),\n  expectedReturnRatePostRetirement: z.coerce.number().min(0).max(20),\n}).refine(data => data.retirementAge > data.currentAge, {\n  message: \"Retirement age must be greater than current age.\",\n  path: [\"retirementAge\"],\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  requiredCorpus: number; // Placeholder\n}\n\nexport function RetirementCorpusCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { currentAge: 30, retirementAge: 60, monthlyExpensesAtRetirement: 5000, lifeExpectancyPostRetirement: 25, expectedInflationRate: 6, expectedReturnRatePostRetirement: 7 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // Placeholder: Real retirement corpus calculation is complex.\n    // This uses a very simplified approach.\n    const annualExpensesAtRetirement = data.monthlyExpensesAtRetirement * 12;\n    const yearsInRetirement = data.lifeExpectancyPostRetirement;\n    \n    // Simplified: average annual withdrawal needed / (return rate - inflation rate)\n    // This doesn't account for sequence of returns risk, or changing expenses.\n    const realReturnRate = (data.expectedReturnRatePostRetirement - data.expectedInflationRate) / 100;\n    \n    let requiredCorpus;\n    if (realReturnRate <= 0) {\n      // If real return is zero or negative, corpus is simply total expenses\n      requiredCorpus = annualExpensesAtRetirement * yearsInRetirement;\n    } else {\n      // Using present value of an annuity formula\n      // PV = PMT * [1 - (1 + r)^-n] / r\n      // PMT = annualExpensesAtRetirement, r = realReturnRate, n = yearsInRetirement\n       requiredCorpus = annualExpensesAtRetirement * (1 - Math.pow(1 + realReturnRate, -yearsInRetirement)) / realReturnRate;\n    }\n\n\n    setResult({ requiredCorpus: parseFloat(requiredCorpus.toFixed(2)) });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Retirement Corpus Calculator</CardTitle>\n        <CardDescription>Estimate the corpus needed for your retirement. (Simplified)</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"currentAge\">Current Age (Years)</Label>\n              <Input id=\"currentAge\" type=\"number\" {...form.register('currentAge')} />\n              {form.formState.errors.currentAge && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.currentAge.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"retirementAge\">Expected Retirement Age (Years)</Label>\n              <Input id=\"retirementAge\" type=\"number\" {...form.register('retirementAge')} />\n              {form.formState.errors.retirementAge && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.retirementAge.message}</p>}\n            </div>\n          </div>\n           <div>\n            <Label htmlFor=\"monthlyExpensesAtRetirement\">Expected Monthly Expenses at Retirement ({currency.symbol})</Label>\n            <Input id=\"monthlyExpensesAtRetirement\" type=\"number\" step=\"any\" {...form.register('monthlyExpensesAtRetirement')} />\n            {form.formState.errors.monthlyExpensesAtRetirement && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.monthlyExpensesAtRetirement.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div>\n              <Label htmlFor=\"lifeExpectancyPostRetirement\">Life Expectancy Post-Retirement (Years)</Label>\n              <Input id=\"lifeExpectancyPostRetirement\" type=\"number\" {...form.register('lifeExpectancyPostRetirement')} />\n              {form.formState.errors.lifeExpectancyPostRetirement && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.lifeExpectancyPostRetirement.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"expectedInflationRate\">Expected Annual Inflation Rate (%)</Label>\n              <Input id=\"expectedInflationRate\" type=\"number\" step=\"any\" {...form.register('expectedInflationRate')} />\n              {form.formState.errors.expectedInflationRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.expectedInflationRate.message}</p>}\n            </div>\n             <div>\n              <Label htmlFor=\"expectedReturnRatePostRetirement\">Expected Post-Retirement Annual Return Rate (%)</Label>\n              <Input id=\"expectedReturnRatePostRetirement\" type=\"number\" step=\"any\" {...form.register('expectedReturnRatePostRetirement')} />\n              {form.formState.errors.expectedReturnRatePostRetirement && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.expectedReturnRatePostRetirement.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate Corpus</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results (Simplified Estimate)</h3>\n          <p><strong>Estimated Retirement Corpus Required:</strong> {currency.symbol}{result.requiredCorpus.toLocaleString()}</p>\n          <p className=\"text-xs mt-2 text-muted-foreground\">Note: This is a simplified calculation. Consider consulting a financial advisor for comprehensive retirement planning.</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7800, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/AnnuityCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  principal: z.coerce.number().min(1, \"Principal amount must be greater than 0\"),\n  interestRate: z.coerce.number().min(0, \"Interest rate must be non-negative\").max(100),\n  years: z.coerce.number().int().min(1, \"Number of years must be at least 1\").max(50),\n  paymentFrequency: z.enum(['monthly', 'quarterly', 'annually']),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  periodicPayment: number; // Placeholder\n  totalPayments: number; // Placeholder\n  totalInterest: number; // Placeholder\n}\n\nexport function AnnuityCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { principal: 100000, interestRate: 5, years: 10, paymentFrequency: 'monthly' },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    // Placeholder: Real annuity payment (PMT) calculation.\n    const P = data.principal;\n    const annualRate = data.interestRate / 100;\n    let n = data.years; // Number of periods\n    let r = annualRate; // Rate per period\n\n    if (data.paymentFrequency === 'monthly') {\n      n *= 12;\n      r /= 12;\n    } else if (data.paymentFrequency === 'quarterly') {\n      n *= 4;\n      r /= 4;\n    }\n    \n    let pmt;\n    if (r === 0) {\n        pmt = P / n;\n    } else {\n        pmt = (P * r * Math.pow(1 + r, n)) / (Math.pow(1 + r, n) - 1);\n    }\n    \n    const totalPayments = pmt * n;\n    const totalInterest = totalPayments - P;\n\n    setResult({ \n        periodicPayment: parseFloat(pmt.toFixed(2)),\n        totalPayments: parseFloat(totalPayments.toFixed(2)),\n        totalInterest: parseFloat(totalInterest.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Annuity Calculator</CardTitle>\n        <CardDescription>Calculate potential income from an annuity (ordinary annuity payments).</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"principal\">Principal Amount (Annuity Value) ({currency.symbol})</Label>\n            <Input id=\"principal\" type=\"number\" step=\"any\" {...form.register('principal')} />\n            {form.formState.errors.principal && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.principal.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"interestRate\">Annual Interest Rate (%)</Label>\n              <Input id=\"interestRate\" type=\"number\" step=\"any\" {...form.register('interestRate')} />\n              {form.formState.errors.interestRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.interestRate.message}</p>}\n            </div>\n             <div>\n              <Label htmlFor=\"years\">Number of Years for Payout</Label>\n              <Input id=\"years\" type=\"number\" {...form.register('years')} />\n              {form.formState.errors.years && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.years.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"paymentFrequency\">Payment Frequency</Label>\n            <Select onValueChange={(value) => form.setValue('paymentFrequency', value as FormData['paymentFrequency'])} defaultValue={form.getValues('paymentFrequency')}>\n                <SelectTrigger id=\"paymentFrequency\"><SelectValue /></SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"monthly\">Monthly</SelectItem>\n                  <SelectItem value=\"quarterly\">Quarterly</SelectItem>\n                  <SelectItem value=\"annually\">Annually</SelectItem>\n                </SelectContent>\n            </Select>\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate Annuity Payment</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Periodic Payment ({form.getValues('paymentFrequency')}):</strong> {currency.symbol}{result.periodicPayment.toLocaleString()}</p>\n          <p><strong>Total Payments Made:</strong> {currency.symbol}{result.totalPayments.toLocaleString()}</p>\n          <p><strong>Total Interest Earned/Paid (depending on perspective):</strong> {currency.symbol}{result.totalInterest.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;AAaA,MAAM,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,WAAW,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACpC,cAAc,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,sCAAsC,GAAG,CAAC;IACjF,OAAO,oIAAA,CAAA,SAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,sCAAsC,GAAG,CAAC;IAChF,kBAAkB,CAAA,GAAA,oIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAW;QAAa;KAAW;AAC/D;AASO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4B;IAC/D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,8IAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,UAAU,8IAAA,CAAA,uBAAoB,CAAC,EAAE;IAE/H,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAY;QAC7B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YAAE,WAAW;YAAQ,cAAc;YAAG,OAAO;YAAI,kBAAkB;QAAU;IAC9F;IAEA,MAAM,WAAoC,CAAC;QACzC,uDAAuD;QACvD,MAAM,IAAI,KAAK,SAAS;QACxB,MAAM,aAAa,KAAK,YAAY,GAAG;QACvC,IAAI,IAAI,KAAK,KAAK,EAAE,oBAAoB;QACxC,IAAI,IAAI,YAAY,kBAAkB;QAEtC,IAAI,KAAK,gBAAgB,KAAK,WAAW;YACvC,KAAK;YACL,KAAK;QACP,OAAO,IAAI,KAAK,gBAAgB,KAAK,aAAa;YAChD,KAAK;YACL,KAAK;QACP;QAEA,IAAI;QACJ,IAAI,MAAM,GAAG;YACT,MAAM,IAAI;QACd,OAAO;YACH,MAAM,AAAC,IAAI,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,KAAM,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC;QAChE;QAEA,MAAM,gBAAgB,MAAM;QAC5B,MAAM,gBAAgB,gBAAgB;QAEtC,UAAU;YACN,iBAAiB,WAAW,IAAI,OAAO,CAAC;YACxC,eAAe,WAAW,cAAc,OAAO,CAAC;YAChD,eAAe,WAAW,cAAc,OAAO,CAAC;QACpD;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;kCAC9C,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;;kCAChC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;;4CAAY;4CAAmC,SAAS,MAAM;4CAAC;;;;;;;kDAC9E,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAY,MAAK;wCAAS,MAAK;wCAAO,GAAG,KAAK,QAAQ,CAAC,YAAY;;;;;;oCAC5E,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS,kBAAI,8OAAC;wCAAE,WAAU;kDAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;;;;;;;;;;;;0CAE3H,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAe;;;;;;0DAC9B,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAe,MAAK;gDAAS,MAAK;gDAAO,GAAG,KAAK,QAAQ,CAAC,eAAe;;;;;;4CAClF,KAAK,SAAS,CAAC,MAAM,CAAC,YAAY,kBAAI,8OAAC;gDAAE,WAAU;0DAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO;;;;;;;;;;;;kDAEhI,8OAAC;;0DACA,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAQ;;;;;;0DACvB,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAQ,MAAK;gDAAU,GAAG,KAAK,QAAQ,CAAC,QAAQ;;;;;;4CACzD,KAAK,SAAS,CAAC,MAAM,CAAC,KAAK,kBAAI,8OAAC;gDAAE,WAAU;0DAAiC,KAAK,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO;;;;;;;;;;;;;;;;;;0CAGrH,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAmB;;;;;;kDAClC,8OAAC,kIAAA,CAAA,SAAM;wCAAC,eAAe,CAAC,QAAU,KAAK,QAAQ,CAAC,oBAAoB;wCAAwC,cAAc,KAAK,SAAS,CAAC;;0DACrI,8OAAC,kIAAA,CAAA,gBAAa;gDAAC,IAAG;0DAAmB,cAAA,8OAAC,kIAAA,CAAA,cAAW;;;;;;;;;;0DACjD,8OAAC,kIAAA,CAAA,gBAAa;;kEACZ,8OAAC,kIAAA,CAAA,aAAU;wDAAC,OAAM;kEAAU;;;;;;kEAC5B,8OAAC,kIAAA,CAAA,aAAU;wDAAC,OAAM;kEAAY;;;;;;kEAC9B,8OAAC,kIAAA,CAAA,aAAU;wDAAC,OAAM;kEAAW;;;;;;;;;;;;;;;;;;;;;;;;0CAIrC,8OAAC;;kDACC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAkB;;;;;;kDACjC,8OAAC,8IAAA,CAAA,iBAAc;wCACb,IAAG;wCACH,kBAAkB;wCAClB,kBAAkB;;;;;;;;;;;;;;;;;;kCAIxB,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,WAAU;sCAAmB;;;;;;;;;;;;;;;;;YAItD,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,8OAAC;;0CAAE,8OAAC;;oCAAO;oCAAmB,KAAK,SAAS,CAAC;oCAAoB;;;;;;;4BAAW;4BAAE,SAAS,MAAM;4BAAE,OAAO,eAAe,CAAC,cAAc;;;;;;;kCACpI,8OAAC;;0CAAE,8OAAC;0CAAO;;;;;;4BAA6B;4BAAE,SAAS,MAAM;4BAAE,OAAO,aAAa,CAAC,cAAc;;;;;;;kCAC9F,8OAAC;;0CAAE,8OAAC;0CAAO;;;;;;4BAA+D;4BAAE,SAAS,MAAM;4BAAE,OAAO,aAAa,CAAC,cAAc;;;;;;;;;;;;;;;;;;;AAK1I","debugId":null}},
    {"offset": {"line": 8231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/BearMarketSurvivalCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  portfolioValue: z.coerce.number().min(1, \"Portfolio value must be greater than 0\"),\n  potentialDrawdown: z.coerce.number().min(1, \"Potential drawdown must be at least 1%\").max(100, \"Drawdown cannot exceed 100%\"),\n  recoveryRate: z.coerce.number().min(0.1, \"Recovery rate must be positive\").max(100, \"Recovery rate unrealistic if too high\").optional(),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  valueAfterDrawdown: number;\n  percentageNeededToRecover: number;\n  // yearsToRecover?: number; // Placeholder for more complex calculation\n}\n\nexport function BearMarketSurvivalCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { portfolioValue: 100000, potentialDrawdown: 30, recoveryRate: 7 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const drawdownDecimal = data.potentialDrawdown / 100;\n    const valueAfterDrawdown = data.portfolioValue * (1 - drawdownDecimal);\n    const percentageNeededToRecover = (data.portfolioValue / valueAfterDrawdown - 1) * 100;\n    \n    setResult({ \n        valueAfterDrawdown: parseFloat(valueAfterDrawdown.toFixed(2)),\n        percentageNeededToRecover: parseFloat(percentageNeededToRecover.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Bear Market Survival Calculator</CardTitle>\n        <CardDescription>Assess portfolio resilience and recovery in bear markets.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"portfolioValue\">Current Portfolio Value ({currency.symbol})</Label>\n            <Input id=\"portfolioValue\" type=\"number\" step=\"any\" {...form.register('portfolioValue')} />\n            {form.formState.errors.portfolioValue && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.portfolioValue.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"potentialDrawdown\">Potential Market Drawdown (%)</Label>\n            <Input id=\"potentialDrawdown\" type=\"number\" step=\"any\" {...form.register('potentialDrawdown')} />\n            {form.formState.errors.potentialDrawdown && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.potentialDrawdown.message}</p>}\n          </div>\n          {/* \n          // Optional: Recovery Rate for time to recover - more complex\n          <div>\n            <Label htmlFor=\"recoveryRate\">Assumed Annual Recovery Rate (%) (Optional)</Label>\n            <Input id=\"recoveryRate\" type=\"number\" step=\"any\" {...form.register('recoveryRate')} />\n            {form.formState.errors.recoveryRate && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.recoveryRate.message}</p>}\n          </div>\n          */}\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Portfolio Value After {form.getValues(\"potentialDrawdown\")}% Drawdown:</strong> {currency.symbol}{result.valueAfterDrawdown.toLocaleString()}</p>\n          <p><strong>Percentage Gain Needed to Recover to Original Value:</strong> {result.percentageNeededToRecover.toLocaleString()}%</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8506, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/GlobalAllocationCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n// For a real version, a Pie chart would be good here like PortfolioAllocationCalculator\n\nconst formSchema = z.object({\n  // Example regions, more can be added\n  northAmerica: z.coerce.number().min(0).max(100).optional().default(0),\n  europe: z.coerce.number().min(0).max(100).optional().default(0),\n  asiaPacific: z.coerce.number().min(0).max(100).optional().default(0),\n  emergingMarkets: z.coerce.number().min(0).max(100).optional().default(0),\n  otherRegions: z.coerce.number().min(0).max(100).optional().default(0),\n}).refine(data => {\n  const total = (data.northAmerica || 0) + (data.europe || 0) + (data.asiaPacific || 0) + (data.emergingMarkets || 0) + (data.otherRegions || 0);\n  return total > 0 && total <= 100; // Allow total less than 100 if user is still inputting, but must be > 0. Final check could be for == 100.\n}, {\n  message: \"Total allocation must be between 1% and 100%.\",\n  path: [\"northAmerica\"], // Arbitrary path\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\ninterface AllocationItem {\n    name: string;\n    percentage: number;\n}\n\nexport function GlobalAllocationCalculator() { \n  const [result, setResult] = useState<AllocationItem[] | null>(null);\n  const [totalPercentage, setTotalPercentage] = useState<number>(0);\n  // Currency toggle might not be directly applicable for percentages, but can be kept for context or future value inputs\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { northAmerica: 60, europe: 20, asiaPacific: 10, emergingMarkets: 10, otherRegions: 0 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const allocations: AllocationItem[] = [\n        { name: \"North America\", percentage: data.northAmerica || 0},\n        { name: \"Europe\", percentage: data.europe || 0 },\n        { name: \"Asia-Pacific\", percentage: data.asiaPacific || 0 },\n        { name: \"Emerging Markets\", percentage: data.emergingMarkets || 0 },\n        { name: \"Other Regions\", percentage: data.otherRegions || 0 },\n    ].filter(item => item.percentage > 0);\n\n    const currentTotal = allocations.reduce((sum, item) => sum + item.percentage, 0);\n    setTotalPercentage(currentTotal);\n\n    if (currentTotal > 100) {\n        form.setError(\"northAmerica\", {type: \"manual\", message: \"Total allocation cannot exceed 100%.\"});\n        setResult(null);\n        return;\n    }\n    if (currentTotal === 0) {\n        form.setError(\"northAmerica\", {type: \"manual\", message: \"At least one region must have an allocation.\"});\n        setResult(null);\n        return;\n    }\n    \n    setResult(allocations);\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Global Allocation Calculator</CardTitle>\n        <CardDescription>Plan your international investment allocation by percentage.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-4\">\n            <div>\n              <Label htmlFor=\"northAmerica\">North America (%)</Label>\n              <Input id=\"northAmerica\" type=\"number\" {...form.register('northAmerica')} />\n            </div>\n            <div>\n              <Label htmlFor=\"europe\">Europe (%)</Label>\n              <Input id=\"europe\" type=\"number\" {...form.register('europe')} />\n            </div>\n            <div>\n              <Label htmlFor=\"asiaPacific\">Asia-Pacific (%)</Label>\n              <Input id=\"asiaPacific\" type=\"number\" {...form.register('asiaPacific')} />\n            </div>\n            <div>\n              <Label htmlFor=\"emergingMarkets\">Emerging Markets (%)</Label>\n              <Input id=\"emergingMarkets\" type=\"number\" {...form.register('emergingMarkets')} />\n            </div>\n            <div>\n              <Label htmlFor=\"otherRegions\">Other Regions (%)</Label>\n              <Input id=\"otherRegions\" type=\"number\" {...form.register('otherRegions')} />\n            </div>\n          </div>\n            {form.formState.errors.northAmerica && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.northAmerica.message}</p>}\n          <div>\n            <Label htmlFor=\"currency-toggle\">Reference Currency (for context)</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">View Allocation</Button>\n        </CardFooter>\n      </form>\n\n      {result && result.length > 0 && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Global Allocation Breakdown</h3>\n          <p className=\"mb-2\"><strong>Total Allocated:</strong> {totalPercentage.toLocaleString()}%</p>\n          {totalPercentage < 100 && <p className=\"text-sm text-amber-600 mb-2\">Note: Total allocation is less than 100%. {100-totalPercentage}% is unallocated.</p>}\n          {totalPercentage > 100 && <p className=\"text-sm text-destructive mb-2\">Error: Total allocation exceeds 100%.</p>}\n          <ul className=\"space-y-1\">\n            {result.map(item => (\n              <li key={item.name} className=\"flex justify-between\">\n                <span>{item.name}:</span>\n                <span>{item.percentage.toLocaleString()}%</span>\n              </li>\n            ))}\n          </ul>\n          {/* Pie chart could be added here */}\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8936, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/calculators/_components/MarketTimingCostCalculator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CurrencyToggle, AVAILABLE_CURRENCIES, type Currency } from '@/components/shared/CurrencyToggle';\n\nconst formSchema = z.object({\n  initialInvestment: z.coerce.number().min(1, \"Initial investment must be greater than 0\"),\n  averageMarketReturn: z.coerce.number().min(-100).max(100), // Can be negative\n  returnIfBestDaysMissed: z.coerce.number().min(-100).max(100),\n  periodYears: z.coerce.number().min(1, \"Period must be at least 1 year\").max(50),\n});\ntype FormData = z.infer<typeof formSchema>;\n\ninterface CalculationResult {\n  valueIfInvested: number;\n  valueIfBestDaysMissed: number;\n  opportunityCost: number;\n}\n\nexport function MarketTimingCostCalculator() { \n  const [result, setResult] = useState<CalculationResult | null>(null);\n  const [currency, setCurrency] = useState<Currency>(AVAILABLE_CURRENCIES.find(c => c.value === 'USD') || AVAILABLE_CURRENCIES[0]);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { initialInvestment: 10000, averageMarketReturn: 7, returnIfBestDaysMissed: 3, periodYears: 10 },\n  });\n\n  const onSubmit: SubmitHandler<FormData> = (data) => {\n    const P = data.initialInvestment;\n    const rMarket = data.averageMarketReturn / 100;\n    const rMissed = data.returnIfBestDaysMissed / 100;\n    const t = data.periodYears;\n\n    const valueIfInvested = P * Math.pow(1 + rMarket, t);\n    const valueIfBestDaysMissed = P * Math.pow(1 + rMissed, t);\n    const opportunityCost = valueIfInvested - valueIfBestDaysMissed;\n    \n    setResult({ \n        valueIfInvested: parseFloat(valueIfInvested.toFixed(2)),\n        valueIfBestDaysMissed: parseFloat(valueIfBestDaysMissed.toFixed(2)),\n        opportunityCost: parseFloat(opportunityCost.toFixed(2)),\n    });\n  };\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl\">Market Timing Cost Calculator</CardTitle>\n        <CardDescription>Understand the potential cost of missing the market's best days.</CardDescription>\n      </CardHeader>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <CardContent className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"initialInvestment\">Initial Investment ({currency.symbol})</Label>\n            <Input id=\"initialInvestment\" type=\"number\" step=\"any\" {...form.register('initialInvestment')} />\n            {form.formState.errors.initialInvestment && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.initialInvestment.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"averageMarketReturn\">Average Annual Market Return (%) (If fully invested)</Label>\n              <Input id=\"averageMarketReturn\" type=\"number\" step=\"any\" {...form.register('averageMarketReturn')} />\n              {form.formState.errors.averageMarketReturn && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.averageMarketReturn.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"returnIfBestDaysMissed\">Annual Return (%) (If best days are missed)</Label>\n              <Input id=\"returnIfBestDaysMissed\" type=\"number\" step=\"any\" {...form.register('returnIfBestDaysMissed')} />\n              {form.formState.errors.returnIfBestDaysMissed && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.returnIfBestDaysMissed.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"periodYears\">Investment Period (Years)</Label>\n            <Input id=\"periodYears\" type=\"number\" {...form.register('periodYears')} />\n            {form.formState.errors.periodYears && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.periodYears.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"currency-toggle\">Currency</Label>\n            <CurrencyToggle\n              id=\"currency-toggle\"\n              selectedCurrency={currency}\n              onCurrencyChange={setCurrency}\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button type=\"submit\" className=\"w-full md:w-auto\">Calculate Cost</Button>\n        </CardFooter>\n      </form>\n\n      {result && (\n        <div className=\"p-6 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4 font-headline\">Results</h3>\n          <p><strong>Portfolio Value (If Fully Invested):</strong> {currency.symbol}{result.valueIfInvested.toLocaleString()}</p>\n          <p><strong>Portfolio Value (If Best Days Missed):</strong> {currency.symbol}{result.valueIfBestDaysMissed.toLocaleString()}</p>\n          <p><strong>Opportunity Cost of Market Timing:</strong> {currency.symbol}{result.opportunityCost.toLocaleString()}</p>\n        </div>\n      )}\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}