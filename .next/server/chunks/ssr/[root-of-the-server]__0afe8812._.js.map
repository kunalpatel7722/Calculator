{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/ai-chatbot.ts"],"sourcesContent":["// This is an AI-powered chatbot assistant that answers user queries related to the website and investment-related topics.\n\n'use server';\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ChatbotInputSchema = z.object({\n  query: z.string().describe('The user query about the website or investment-related topics.'),\n});\n\nexport type ChatbotInput = z.infer<typeof ChatbotInputSchema>;\n\nconst ChatbotOutputSchema = z.object({\n  answer: z.string().describe('The answer to the user query.'),\n});\n\nexport type ChatbotOutput = z.infer<typeof ChatbotOutputSchema>;\n\nexport async function aiChatbot(input: ChatbotInput): Promise<ChatbotOutput> {\n  return aiChatbotFlow(input);\n}\n\nconst aiChatbotPrompt = ai.definePrompt({\n  name: 'aiChatbotPrompt',\n  input: {schema: ChatbotInputSchema},\n  output: {schema: ChatbotOutputSchema},\n  prompt: `You are a helpful AI chatbot assistant. Your role is to answer user queries related to the website and investment-related topics.\n  Use your knowledge and web search to provide accurate and informative answers.\n\n  User Query: {{{query}}}\n\n  Answer:`, // Removed Handlebars helper for web search as it's not supported\n});\n\nconst aiChatbotFlow = ai.defineFlow(\n  {\n    name: 'aiChatbotFlow',\n    inputSchema: ChatbotInputSchema,\n    outputSchema: ChatbotOutputSchema,\n  },\n  async input => {\n    const {output} = await aiChatbotPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,0HAA0H;;;;;;AAI1H;AACA;AAAA;;;;;;AAEA,MAAM,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAIA,MAAM,sBAAsB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAIO,eAAe,UAAU,KAAmB;IACjD,OAAO,cAAc;AACvB;AAEA,MAAM,kBAAkB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACtC,MAAM;IACN,OAAO;QAAC,QAAQ;IAAkB;IAClC,QAAQ;QAAC,QAAQ;IAAmB;IACpC,QAAQ,CAAC;;;;;SAKF,CAAC;AACV;AAEA,MAAM,gBAAgB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACjC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,gBAAgB;IACvC,OAAO;AACT;;;IAzBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-seo-content.ts"],"sourcesContent":["// src/ai/flows/generate-seo-content.ts\n'use server';\n\n/**\n * @fileOverview Generates SEO-optimized content for investment calculators and blog posts.\n *\n * - generateSeoContent - A function that generates SEO content.\n * - GenerateSeoContentInput - The input type for the generateSeoContent function.\n * - GenerateSeoContentOutput - The return type for the generateSeoContent function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateSeoContentInputSchema = z.object({\n  calculatorName: z\n    .string()\n    .describe('The name of the calculator or blog topic for which to generate content.'),\n  keywords: z.string().describe('Relevant keywords for the content.'),\n});\nexport type GenerateSeoContentInput = z.infer<typeof GenerateSeoContentInputSchema>;\n\nconst GenerateSeoContentOutputSchema = z.object({\n  title: z.string().describe('The SEO-optimized title for the content.'),\n  content: z.string().describe('The SEO-optimized content, potentially including Markdown links.'),\n});\nexport type GenerateSeoContentOutput = z.infer<typeof GenerateSeoContentOutputSchema>;\n\nexport async function generateSeoContent(input: GenerateSeoContentInput): Promise<GenerateSeoContentOutput> {\n  return generateSeoContentFlow(input);\n}\n\nconst generateSeoContentPrompt = ai.definePrompt({\n  name: 'generateSeoContentPrompt',\n  input: {schema: GenerateSeoContentInputSchema},\n  output: {schema: GenerateSeoContentOutputSchema},\n  prompt: `You are an SEO expert specializing in creating content for financial calculators and related blog posts.\n\nGenerate SEO-optimized content for \"{{calculatorName}}\" (this could be a calculator name or a blog post topic), using the following keywords: {{keywords}}.\nThe content should be informative, engaging, and optimized for search engines.\nThe content should include a title and a body. The title and content should be SEO optimized to rank on Google.\nThe content must be related to finance and investment.\n\nIf generating content for a calculator, include a detailed explanation of the calculator, the finance and investment calculations involved, how it works, and how the user can benefit from it.\n\nIf generating content for a blog post:\n- Naturally integrate inbound Markdown links to relevant calculators on the InvestAI website. For example, if discussing 'compound interest', you could link to '[our Compound Interest Calculator](/calculators/compound-interest)'. Other calculator paths might include '/calculators/bitcoin-roi', '/calculators/sip-calculator', etc., as appropriate for the topic.\n- Include suggestions for 1-2 outbound Markdown links to authoritative external resources using placeholder URLs. For example: 'For further details, consult [Reputable Financial News Source](placeholder-external-link-financial-news) or [Official Government Finance Guide](placeholder-external-link-gov-finance)'. Do NOT use real URLs, only placeholders like 'placeholder-external-link-[topic]'.\n\nEnsure that the content is original and not plagiarized.\nFormat important headings using Markdown (e.g., ## Main Section, ### Sub-section). Use Markdown for bold (**text**) and italics (*text*) for emphasis.\nStructure the content with paragraphs.\n`,\n});\n\nconst generateSeoContentFlow = ai.defineFlow(\n  {\n    name: 'generateSeoContentFlow',\n    inputSchema: GenerateSeoContentInputSchema,\n    outputSchema: GenerateSeoContentOutputSchema,\n  },\n  async input => {\n    const {output} = await generateSeoContentPrompt(input);\n    return output!;\n  }\n);\n\n"],"names":[],"mappings":"AAAA,uCAAuC;;;;;;AAGvC;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;IACZ,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,mBAAmB,KAA8B;IACrE,OAAO,uBAAuB;AAChC;AAEA,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC/C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA6B;IAC7C,QAAQ;QAAC,QAAQ;IAA8B;IAC/C,QAAQ,CAAC;;;;;;;;;;;;;;;;AAgBX,CAAC;AACD;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,yBAAyB;IAChD,OAAO;AACT;;;IApCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/blog/%5Bslug%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {aiChatbot as '4049a0b778c65dc679ec58bc734feece070597c5f4'} from 'ACTIONS_MODULE0'\nexport {generateSeoContent as '405cc6b37353bcab607876327781a79922c5b169f1'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/blog/%5Bslug%5D/page.tsx"],"sourcesContent":["\nimport { generateSeoContent } from '@/ai/flows/generate-seo-content';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { ArrowLeft } from 'lucide-react'; \nimport { Button } from '@/components/ui/button';\n\ninterface BlogImage {\n  imageUrl: string;\n  dataAiHint: string;\n}\n\ninterface BlogPostDetails {\n  slug: string;\n  title: string;\n  category: string;\n  date: string;\n  images: BlogImage[];\n  keywords: string[];\n}\n\n// Placeholder for fetching actual blog post data based on slug\n// In a real app, this would fetch from a database or CMS\nconst getBlogPostBySlug = async (slug: string): Promise<BlogPostDetails | undefined> => {\n  // Simulating fetching post details\n  const posts: BlogPostDetails[] = [\n    { slug: 'understanding-compound-interest', title: 'Understanding Compound Interest for Long-Term Growth', category: 'Investing Basics', date: 'October 26, 2023', images: [{ imageUrl: 'https://placehold.co/800x400.png', dataAiHint: 'financial education' }, { imageUrl: 'https://placehold.co/800x300.png', dataAiHint: 'investment chart' }], keywords: ['compound interest', 'investment growth', 'finance basics'] },\n    { slug: 'beginners-guide-bitcoin-roi', title: 'Beginner\\'s Guide to Bitcoin ROI Calculation', category: 'Cryptocurrency', date: 'October 24, 2023', images: [{ imageUrl: 'https://placehold.co/800x400.png', dataAiHint: 'crypto chart' }, { imageUrl: 'https://placehold.co/800x300.png', dataAiHint: 'bitcoin analysis' }], keywords: ['bitcoin roi', 'crypto basics', 'digital assets'] },\n    { slug: 'maximizing-sip-investments', title: 'Maximizing Your SIP Investments with AI Insights', category: 'Mutual Funds', date: 'October 22, 2023', images: [{ imageUrl: 'https://placehold.co/800x400.png', dataAiHint: 'investment plan' }, { imageUrl: 'https://placehold.co/800x300.png', dataAiHint: 'ai finance' }], keywords: ['sip strategy', 'ai investing', 'mutual funds'] },\n    { slug: 'navigating-market-volatility', title: 'Navigating Market Volatility: Tips for Investors', category: 'Market Analysis', date: 'October 20, 2023', images: [{ imageUrl: 'https://placehold.co/800x400.png', dataAiHint: 'stock analysis' }, { imageUrl: 'https://placehold.co/800x300.png', dataAiHint: 'market graph' }], keywords: ['market volatility', 'investment tips', 'risk management'] },\n  ];\n  return posts.find(p => p.slug === slug);\n};\n\nexport async function generateStaticParams() {\n  const posts = [ \n    { slug: 'understanding-compound-interest' },\n    { slug: 'beginners-guide-bitcoin-roi' },\n    { slug: 'maximizing-sip-investments' },\n    { slug: 'navigating-market-volatility' },\n  ];\n  return posts.map(post => ({ slug: post.slug }));\n}\n\n\ninterface BlogPostPageProps {\n  params: { slug: string };\n}\n\nexport default async function BlogPostPage({ params }: BlogPostPageProps) {\n  const postDetails = await getBlogPostBySlug(params.slug);\n\n  if (!postDetails || !postDetails.images || postDetails.images.length === 0) {\n    return <div className=\"container mx-auto py-8 text-center\">Blog post or primary image not found.</div>;\n  }\n\n  const firstImage = postDetails.images[0];\n  const secondImage = postDetails.images.length > 1 ? postDetails.images[1] : null;\n\n  let seoContent = { title: postDetails.title, content: `Detailed content for ${postDetails.title} goes here. This article will delve into ${postDetails.keywords.join(', ')} offering valuable insights and practical advice.` };\n  try {\n    seoContent = await generateSeoContent({\n      calculatorName: `Blog Post: ${postDetails.title}`, \n      keywords: postDetails.keywords.join(', '),\n    });\n  } catch (error: any) {\n    const itemName = postDetails.title;\n    let errorDetailsText = \"Unknown error occurred.\";\n\n    if (error instanceof Error) {\n      errorDetailsText = `Message: ${error.message}`;\n    } else if (error && typeof error === 'object' && error.message) {\n      errorDetailsText = `Message: ${error.message}`;\n    } else if (error) {\n       try {\n        errorDetailsText = `Details: ${JSON.stringify(error)}`;\n      } catch (e) {\n        errorDetailsText = `Details: Unserializable error object. Keys: ${Object.keys(error || {}).join(', ')}`;\n      }\n    }\n    console.error(`Failed to generate blog content for \"${itemName}\". ${errorDetailsText}`);\n    if (error instanceof Error && error.stack) {\n      console.error(\"Stack trace for the above error:\", error.stack);\n    } else if (error && typeof error === 'object') {\n      console.error(\"Raw error object for AI content generation failure:\", error);\n    }\n  }\n  \n  const formattedSeoContent = seoContent.content\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n    .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n    .replace(/### (.*?)(?:\\n|<br \\s*\\/?>)/g, '<h3>$1</h3>')\n    .replace(/## (.*?)(?:\\n|<br \\s*\\/?>)/g, '<h2>$1</h2>')\n    .replace(/# (.*?)(?:\\n|<br \\s*\\/?>)/g, '<h1>$1</h1>')\n    .replace(/^- (.*?)(?:\\n|<br \\s*\\/?>)/gm, '<li>$1</li>')\n    .replace(/(<li>.*?<\\/li>)+/gs, (match) => `<ul>${match}</ul>`)\n    .replace(/\\n/g, '<br />');\n\n  let contentPart1 = formattedSeoContent;\n  let contentPart2 = '';\n\n  const headingSplitRegex = /(<\\/h[23]>)/i; // Matches </h2> or </h3>\n  const splitByHeading = formattedSeoContent.split(headingSplitRegex);\n\n  if (splitByHeading.length > 1) {\n    contentPart1 = splitByHeading.slice(0, 2).join(''); // Content up to and including the closing h2/h3 tag\n    contentPart2 = splitByHeading.slice(2).join('');\n  } else {\n    // Fallback: split by <br />\n    const lines = formattedSeoContent.split(/<br\\s*\\/?>/i); // Split by <br />, <br/>, <br />\n    if (lines.length > 1) {\n      const splitIndex = Math.min(3, Math.floor(lines.length / 2)); // Insert after ~3rd line or middle\n      contentPart1 = lines.slice(0, splitIndex).join('<br />') + (lines.length > splitIndex ? '<br />' : '');\n      contentPart2 = lines.slice(splitIndex).join('<br />');\n    }\n    // If only one line or no <br />, contentPart2 remains empty, second image will appear after all contentPart1 if secondImage exists.\n  }\n\n\n  return (\n    <div className=\"container mx-auto py-12 px-4 max-w-4xl\">\n      <article>\n        <header className=\"mb-8\">\n          <div className=\"mb-4\">\n            <Button variant=\"outline\" size=\"sm\" asChild>\n              <Link href=\"/blog\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back to Blog\n              </Link>\n            </Button>\n          </div>\n          <Badge variant=\"secondary\" className=\"mb-2\">{postDetails.category}</Badge>\n          <h1 className=\"text-4xl font-bold mb-3 font-headline\">{seoContent.title}</h1>\n          <p className=\"text-muted-foreground text-sm\">{postDetails.date}</p>\n        </header>\n\n        <Image \n          src={firstImage.imageUrl} \n          alt={seoContent.title} \n          width={800} \n          height={400} \n          className=\"w-full rounded-lg shadow-md mb-8 object-cover\"\n          data-ai-hint={firstImage.dataAiHint} \n          priority\n        />\n        \n        <div className=\"prose prose-lg dark:prose-invert max-w-none\" dangerouslySetInnerHTML={{ __html: contentPart1 }} />\n\n        {secondImage && (\n          <Image\n            src={secondImage.imageUrl}\n            alt={`${seoContent.title} - illustration`}\n            width={800}\n            height={300}\n            className=\"w-full rounded-lg shadow-md my-8 object-cover\"\n            data-ai-hint={secondImage.dataAiHint}\n          />\n        )}\n        \n        {contentPart2 && (\n          <div className=\"prose prose-lg dark:prose-invert max-w-none\" dangerouslySetInnerHTML={{ __html: contentPart2 }} />\n        )}\n      </article>\n\n      <aside className=\"mt-12 pt-8 border-t\">\n        <h2 className=\"text-2xl font-semibold mb-6 font-headline\">Related Topics</h2>\n        <div className=\"space-y-4\">\n          {postDetails.keywords.map(keyword => (\n            <Badge key={keyword} variant=\"outline\" className=\"mr-2\">{keyword}</Badge>\n          ))}\n        </div>\n         <div className=\"mt-8\">\n            <Button asChild>\n                <Link href=\"/calculators\">Explore Calculators</Link>\n            </Button>\n        </div>\n      </aside>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}